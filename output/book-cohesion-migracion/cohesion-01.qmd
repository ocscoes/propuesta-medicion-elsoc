# Marco conceptual 

 La conceptualización de la cohesión social se inspira de la acepción de Chan et al. (2006), la cual establece dos dimensiones para la cohesión social: **Vertical** y **Horizontal**. La primera se enfoca en las relaciones entre los ciudadanos (o sociedad civil) y el Estado y sus instituciones, mientras que la segunda aborda las interacciones sociales entre los individuos.  

“La cohesión social es un estado de cosas que concierte tanto a las interacciones verticales como horizontales entre los miembros de la sociedad, caracterizado por un conjunto de actitudes y normas que incluyen la confianza, el sentido de pertenencia y la voluntad de participar y ayudar, así como sus manifestaciones conductuales” (Chan et al., 2006, p. 290).

# Propuestas

## Propuesta LAPOP

![](images/hor-lapop.png)

## Propuesta ELSOC

![](images/hor-elsoc.png)

## Diferencias

**1)** Propuesta con ELSOC es mucho más compleja en tanto tiene mayores niveles de granularidad y, consecuentemente, mayor cantidad de factores en comparación con la propuesta de LA, cuya perspectiva es más minimalista. 

Esto se expresa en, por ejemplo, la subdimensión de confianza en instituciones y democracia. En la primera propuesta esta se entiende como una subdimensión compuesta de dos factores: confianza en instituciones y satisfacción con la democracia. No así, en la propuesta construida con LAPOP estos factores se entienden como dos subdimensiones independientes. 

**2)** En la propuesta con ELSOC se consideran varias subdimensiones que no están presentes en el índice de LA debido a decisiones basadas en inconsistencia teórica y/o estadística, tal como el factor de comportamiento prosocial, el cual intentó integrarse en con datos de WVS y, si bien la consistencia interna del factor era aceptable, no correlacionaba con los demás factores de su dimensión. 

**3)** Las propuestas no comparten ningún factor de sus subdimensiones. Si bien ambas integran confianza interpersonal en su medición, ELSOC la considera como un factor de segundo orden, mientras que en la propuesta de LAPOP es un factor de primer orden. 

## Nueva propuesta

![](images/propuesta-nueva.png)

En comparación con la anterior propuesta hecha con ELSOC, se elimina la subdimensión de Sentido de pertenencia, puesto que para la construcción de la propuesta con LAPOP se definió que era problemático comprender indicadores como orgullo nacional dentro de la cohesión social. En su lugar, se integra un factor de pertenencia al barrio dentro de la subdimensión de vínculo territoriales. Asimismo, se incluye una nueva subdimensión de seguridad (siguiendo la propuesta con LAPOP), considerándose como uno de los elementos centrales durante el último tiempo en las discusiones relacionadas al vínculo social. Por último, se mantiene la subdimensión de redes sociales pero con dos cambios: se añade un tercer factor de ayuda económica (1), y se equilibra la cantidad de indicadores por cada factor (2). Para ver en profundidad cuáles son las variables que componen cada factor y su operacionalización puede revisar los [anexos](añadir link al renderizar todo el doc). 

# Descriptivos nueva propuesta

A continuación, se presentan los análisis descriptivos de los constructos presentados en la propuesta renovada:

```{r}
#| label: packages
#| echo: false

if (! require("pacman")) install.packages("pacman")

pacman::p_load(tidyverse,
               sjmisc, 
               here,
               sjlabelled,
               psych,
               rstatix,
               lme4,
               performance,
               sjPlot,
               srvyr,
               ggdist,
               purrr,
               rlang)


options(scipen=999)
rm(list = ls())
```

```{r}
#| label: database ola 1
#| echo: false 

elsoc_1 <- readRDS("../../input/data/proc_data/elsoc_2016_coh_mig.RData")
```

```{r}
#| label: database ola 2
#| echo: false 

elsoc_2 <- readRDS("../../input/data/proc_data/elsoc_2017_coh_mig.RData")
```

```{r}
#| label: database ola 3 
#| echo: false 

elsoc_3 <- readRDS("../../input/data/proc_data/elsoc_2018_coh_mig.RData")
```

```{r}
#| label: database ola 4
#| echo: false 

elsoc_4 <- readRDS("../../input/data/proc_data/elsoc_2019_coh_mig.RData")
```

```{r}
#| label: database ola 5 
#| echo: false 

elsoc_5 <- readRDS("../../input/data/proc_data/elsoc_2021_mig.RData")
```

```{r}
#| label: database ola 6
#| echo: false 

elsoc_6 <- readRDS("../../input/data/proc_data/elsoc_2022_mig.RData")
```



```{r}
#| label: data-full
#| echo: false

# Agregar la variable ola a cada base
elsoc_1 <- elsoc_1 %>% mutate(ola = 1)
elsoc_2 <- elsoc_2 %>% mutate(ola = 2)
elsoc_3 <- elsoc_3 %>% mutate(ola = 3)
elsoc_4 <- elsoc_4 %>% mutate(ola = 4)
elsoc_4 <- elsoc_4 %>% mutate(ola = 4)
elsoc_5 <- elsoc_5 %>% mutate(ola = 5)
elsoc_6 <- elsoc_6 %>% mutate(ola = 6)

# Unir todas las olas en una sola base
elsoc_long <- bind_rows(elsoc_1, elsoc_2, elsoc_3, elsoc_4, elsoc_5, elsoc_6)
```

```{r}
#| label: comportamiento prosocial tres cat


elsoc_5_graph <- elsoc_5 %>%  
 mutate(    
   # Índice promediado    
   comportamiento_prosocial = rowMeans(      
     select(., reunion_pub, voluntariado),      
     na.rm = TRUE    
   ),         
  
   # Recodificación en 3 categorías   
   comportamiento_prosocial = case_when(      
     comportamiento_prosocial == 1 ~ 1,
     comportamiento_prosocial >= 1.5 & comportamiento_prosocial <= 2 ~ 2,
     comportamiento_prosocial >= 2.5 & comportamiento_prosocial <= 3 ~ 3
   )  
 )
```


```{r}
#| label: ayuda economica tres cat
elsoc_5_graph <- elsoc_5_graph %>%  
 mutate(    
   # Índice promediado    
   ayuda_economica = rowMeans(      
     select(., prestar_dinero, ayuda_trabajo),      
     na.rm = TRUE    
   ),         
  
   # Recodificación en 3 categorías   
   ayuda_economica = case_when(      
     ayuda_economica == 1 ~ 1,
     ayuda_economica >= 1.5 & ayuda_economica <= 2 ~ 2,
     ayuda_economica >= 2.5 & ayuda_economica <= 3 ~ 3
   ) 
 )
```


```{r}
#| label: confianza interpersonal trescat


elsoc_5_graph <- elsoc_5_graph %>%  
 mutate(    
   # Índice promediado    
   confianza_inter = rowMeans(      
     select(., confianza_gen, altruismo_gen),      
     na.rm = TRUE    
   ),         
  
   # Recodificación en 3 categorías   
   confianza_inter = case_when(      
     confianza_inter == 1 ~ 1,
     confianza_inter >= 1.5 & confianza_inter <= 2 ~ 2,
     confianza_inter >= 2.5 & confianza_inter <= 3 ~ 3
   )  
 )
```




```{r}
#| label: seguridad subjetiva tres cat


elsoc_6_graph <- elsoc_6 %>%  
 mutate(    
   # Índice promediado    
   seguridad_sub = rowMeans(      
     select(., seguridad_sat, seguridad_perc),      
     na.rm = TRUE    
   ),         
  
   # Recodificación en 3 categorías   
   seguridad_sub = case_when(      
     seguridad_sub >= 1 & seguridad_sub <= 2.5 ~ 1,
     seguridad_sub >= 3 & seguridad_sub <= 3.5 ~ 2,
     seguridad_sub >= 4 & seguridad_sub <= 5 ~ 3
   )  
 )
```


```{r}
#| label: seguridad objetiva trescat


elsoc_6_graph <- elsoc_6_graph %>%  
 mutate(    
   # Índice promediado    
   seguridad_obj = rowMeans(      
     select(., peleas_calle, asaltos, trafico_drogas),      
     na.rm = TRUE    
   ),         
  
   # Recodificación en 3 categorías   
   seguridad_obj = case_when(      
     seguridad_obj >= 1 & seguridad_obj <= 2.5 ~ 1,
     seguridad_obj >= 3 & seguridad_obj <= 3.5 ~ 2,
     seguridad_obj >= 4 & seguridad_obj <= 5 ~ 3
   )  
 )
```


```{r}
#| label: sentido de pertenencia dummy


elsoc_6_graph <- elsoc_6_graph %>%
 mutate(
   # Índice promediado
   sentido_pertenencia = rowMeans(
     select(., barrio_ideal, barrio_integracion, barrio_identidad, barrio_pertenencia),
     na.rm = TRUE
   ),
  
   # Recodificación en 3 categorias
   sentido_pertenencia = case_when(
     sentido_pertenencia >= 1 & sentido_pertenencia <= 2.75 ~ 1,
     sentido_pertenencia >= 2.76 & sentido_pertenencia <= 3.75 ~ 2,
     sentido_pertenencia >= 4 & sentido_pertenencia <= 5 ~ 3
   )
 )
```




```{r}
#| label: satisfacción con el barrio dummy


elsoc_6_graph <- elsoc_6_graph %>%
 mutate(
   # Índice promediado
   satisfaccion_barrio = rowMeans(
     select(., barrio_amigos, barrio_sociable, barrio_cordial, barrio_colaborador),
     na.rm = TRUE
   ),
  
   # Recodificación en tres categorias
   satisfaccion_barrio = case_when(
     satisfaccion_barrio >= 1 & satisfaccion_barrio <= 2.75 ~ 1,
     satisfaccion_barrio >= 2.76 & satisfaccion_barrio <= 3.75 ~ 2,
     satisfaccion_barrio >= 4 & satisfaccion_barrio <= 5 ~ 3
   )
 )
```




```{r}
#| label: fig-redes
#| fig-cap: Distribución de los índices de redes sociales
#| echo: false
#| fig-width: 12
#| fig-height: 8


# Seleccionar las variables y crear el dataset
datos_redes_sociales <- dplyr::select(elsoc_5_graph, comportamiento_prosocial, ayuda_economica, confianza_inter)


# Crea el gráfico
desc_redes_sociales <- plot_stackfrq(
 datos_redes_sociales,
 show.prc = FALSE,
 show.n = FALSE,
 show.total = FALSE,
 axis.labels = c("Comportamiento prosocial", "Ayuda económica", "Confianza interpersonal")
) +
 theme_ggdist() +
 theme(
   # Estilo del texto original
   axis.text = element_text(size = 18),
   title = element_text(size = 20),
   legend.text = element_text(size = 16),
  
   # Estilo de la leyenda (adaptado del código de referencia)
   legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
   legend.background = element_rect(fill = "white", color = NA),
   legend.margin = margin(t = 6, r = 8, b = 6, l = 8),
   legend.box.margin = margin(t = 6, r = 6, b = 6, l = 6),
   legend.position = "bottom",
   legend.direction = "horizontal",
   legend.box = "horizontal",
   legend.title = element_text(face = "bold"),
   legend.key = element_rect(fill = "white", color = NA),
   legend.key.height = unit(12, "pt"),
   legend.key.width = unit(20, "pt")
 ) +
 scale_fill_manual(
   values = c("1" = "#f9913d", "2" = "#7ABA21", "3" = "#2b2f3c"),
   labels = c("1" = "Bajo",
              "2" = "Medio",
              "3" = "Alto")
 ) +
 guides(fill = guide_legend(
   title = NULL,
   title.position = "top",
   label.position = "right",
   nrow = 1,
   byrow = TRUE,
   keywidth = unit(14, "pt"),
   keyheight = unit(10, "pt")
 ))


# Para mostrar el gráfico
desc_redes_sociales
```




```{r}
#| label: fig-seguridad
#| fig-cap: Distribución de los índices de seguridad
#| echo: false
#| fig-width: 12
#| fig-height: 8


# Primero selecciona tus variables
datos_seguridad <- dplyr::select(elsoc_6_graph, seguridad_sub, seguridad_obj)


# Crea el gráfico
cohesion_2 <- plot_stackfrq(
 datos_seguridad,
 show.prc = FALSE,
 show.n = FALSE,
 show.total = FALSE,
 axis.labels = c("Seguridad subjetiva", "Seguridad objetiva")
) +
 theme_ggdist() +
 theme(
   # Estilo del texto original
   axis.text = element_text(size = 18),
   title = element_text(size = 20),
   legend.text = element_text(size = 16),
  
   # Estilo de la leyenda (adaptado del código de referencia)
   legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
   legend.background = element_rect(fill = "white", color = NA),
   legend.margin = margin(t = 6, r = 8, b = 6, l = 8),
   legend.box.margin = margin(t = 6, r = 6, b = 6, l = 6),
   legend.position = "bottom",
   legend.direction = "horizontal",
   legend.box = "horizontal",
   legend.title = element_text(face = "bold"),
   legend.key = element_rect(fill = "white", color = NA),
   legend.key.height = unit(12, "pt"),
   legend.key.width = unit(20, "pt")
 ) +
 scale_fill_manual(
   values = c("1" = "#f9913d", "2" = "#7ABA21", "3" = "#2b2f3c"),
   labels = c("1" = "Muy en desacuerdo",
              "2" = "Ni en desacuerdo \n ni de acuerdo",
              "3" = "Muy de acuerdo")
 ) +
 guides(fill = guide_legend(
   title = NULL,
   title.position = "top",
   label.position = "right",
   nrow = 1,
   byrow = TRUE,
   keywidth = unit(14, "pt"),
   keyheight = unit(10, "pt")
 ))


cohesion_2
```




```{r}
#| label: fig-vinculos
#| fig-cap: Distribución de los índices de vínculos territoriales
#| echo: false
#| fig-width: 12
#| fig-height: 8


# Primero selecciona tus variables
datos_vinculos <- dplyr::select(elsoc_6_graph, sentido_pertenencia, satisfaccion_barrio)


# Crea el gráfico
cohesion_3 <- plot_stackfrq(
 datos_vinculos,
 show.prc = FALSE,
 show.n = FALSE,
 show.total = FALSE,
 axis.labels = c("Sentido de pertenencia", "Satisfacción con el barrio")
) +
 theme_ggdist() +
 theme(
   # Estilo del texto original
   axis.text = element_text(size = 18),
   title = element_text(size = 20),
   legend.text = element_text(size = 16),
  
   # Estilo de la leyenda (adaptado del código de referencia)
   legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
   legend.background = element_rect(fill = "white", color = NA),
   legend.margin = margin(t = 6, r = 8, b = 6, l = 8),
   legend.box.margin = margin(t = 6, r = 6, b = 6, l = 6),
   legend.position = "bottom",
   legend.direction = "horizontal",
   legend.box = "horizontal",
   legend.title = element_text(face = "bold"),
   legend.key = element_rect(fill = "white", color = NA),
   legend.key.height = unit(12, "pt"),
   legend.key.width = unit(20, "pt")
 ) +
 scale_fill_manual(
   values = c("1" = "#f9913d", "2" = "#7ABA21", "3" = "#2b2f3c"),
   labels = c("1" = "Bajo",
              "2" = "Medio",
              "3" = "Alto")
 ) +
 guides(fill = guide_legend(
   title = NULL,
   title.position = "top",
   label.position = "right",
   nrow = 1,
   byrow = TRUE,
   keywidth = unit(14, "pt"),
   keyheight = unit(10, "pt")
 ))


cohesion_3
```


```{r}
#| label: comportamiento prosocial dummy 2
#| echo: false

elsoc_long_graph <- elsoc_long %>%
  mutate(
    # Índice promediado - especificar las columnas directamente
    comportamiento_prosocial = rowMeans(
      cbind(reunion_pub, voluntariado),
      na.rm = TRUE
    ),
    
    # Recodificación en 0/1
    comportamiento_prosocial = case_when(
      comportamiento_prosocial <= 1.5 ~ 0,
      comportamiento_prosocial >= 2   ~ 1,
      TRUE ~ NA_real_  # Para valores entre 1.5 y 2
    ),
    
    # Convertir a factor con labels
    comportamiento_prosocial = factor(
      comportamiento_prosocial,
      levels = c(0, 1),
      labels = c("Bajo", "Alto")
    )
  )
```

```{r}
#| label: ayuda economica dummy 2
#| echo: false


elsoc_long_graph <- elsoc_long_graph %>%
  mutate(
    # Índice promediado - especificar las columnas directamente
    ayuda_economica = rowMeans(
      cbind(prestar_dinero, ayuda_trabajo),
      na.rm = TRUE
    ),
    
    # Recodificación en 0/1
    ayuda_economica = case_when(
      ayuda_economica <= 1.5 ~ 0,
      ayuda_economica >= 2   ~ 1,
      TRUE ~ NA_real_  # Para valores entre 1.5 y 2
    ),
    
    # Convertir a factor con labels
    ayuda_economica = factor(
      ayuda_economica,
      levels = c(0, 1),
      labels = c("Bajo", "Alto")
    )
  )
```

```{r}
#| label: confianza interpersonal dummy 2
#| echo: false


elsoc_long_graph <- elsoc_long_graph %>%
  mutate(
    # Índice promediado - especificar las columnas directamente
    confianza_inter = rowMeans(
      cbind(confianza_gen, altruismo_gen),
      na.rm = TRUE
    ),
    
    # Recodificación en 0/1
    confianza_inter = case_when(
      confianza_inter <= 1.5 ~ 0,
      confianza_inter >= 2   ~ 1,
      TRUE ~ NA_real_  # Para valores entre 1.5 y 2
    ),
    
    # Convertir a factor con labels
    confianza_inter = factor(
      confianza_inter,
      levels = c(0, 1),
      labels = c("Bajo", "Alto")
    )
  )
```

```{r}
#| label: redes dummy 2
#| echo: false

elsoc_long_graph <- elsoc_long_graph %>%
  mutate(
    comportamiento_prosocial = set_label(comportamiento_prosocial, "Comportamiento prosocial"),
    ayuda_economica          = set_label(ayuda_economica, "Ayuda económica"),
    confianza_inter          = set_label(confianza_inter, "Confianza interpersonal")
  )
```

```{r}
#| label: seguridad subjetiva dummy 2
#| echo: false

elsoc_long_graph <- elsoc_long_graph %>%
  mutate(
    # Índice promediado - especificar las columnas directamente
    seguridad_sub = rowMeans(
      cbind(seguridad_sat, seguridad_perc),
      na.rm = TRUE
    ),
    
    # Recodificación en 0/1
    seguridad_sub = case_when(
      seguridad_sub <= 2.5 ~ 0,
      seguridad_sub >= 3   ~ 1,
      TRUE ~ NA_real_  # Para valores entre 2.5 y 3
    ),
    
    # Convertir a factor con labels
    seguridad_sub = factor(
      seguridad_sub,
      levels = c(0, 1),
      labels = c("Bajo", "Alto")
    )
  )
```

```{r} 
#| label: seguridad objetiva dummy 2
#| echo: false

elsoc_long_graph <- elsoc_long_graph %>%
  mutate(
    # Índice promediado - especificar las columnas directamente
    seguridad_obj = rowMeans(
      cbind(peleas_calle, asaltos, trafico_drogas),
      na.rm = TRUE
    ),
    
    # Recodificación en 0/1
    seguridad_obj = case_when(
      seguridad_obj <= 2.5 ~ 0,
      seguridad_obj >= 3   ~ 1,
      TRUE ~ NA_real_  # Para valores entre 2.5 y 3
    ),
    
    # Convertir a factor con labels
    seguridad_obj = factor(
      seguridad_obj,
      levels = c(0, 1),
      labels = c("Bajo", "Alto")
    )
  )
```

```{r}
#| label: sentido de pertenencia dummy 2
#| echo: false

elsoc_long_graph <- elsoc_long_graph %>%
  mutate(
    # Índice promediado - especificar las columnas directamente
    sentido_pertenencia = rowMeans(
      cbind(barrio_ideal, barrio_integracion, barrio_identidad, barrio_pertenencia),
      na.rm = TRUE
    ),
    
    # Recodificación en 0/1
    sentido_pertenencia = case_when(
      sentido_pertenencia <= 2.5 ~ 0,
      sentido_pertenencia >= 3   ~ 1,
      TRUE ~ NA_real_  # Para valores entre 2.5 y 3
    ),
    
    # Convertir a factor con labels
    sentido_pertenencia = factor(
      sentido_pertenencia,
      levels = c(0, 1),
      labels = c("Bajo", "Alto")
    )
  )
```

```{r}
#| label: satisfacción con el barrio dummy 2
#| echo: false

elsoc_long_graph <- elsoc_long_graph %>%
  mutate(
    # Índice promediado - especificar las columnas directamente
    satisfaccion_barrio = rowMeans(
      cbind(barrio_amigos, barrio_sociable, barrio_cordial, barrio_colaborador),
      na.rm = TRUE
    ),
    
    # Recodificación en 0/1
    satisfaccion_barrio = case_when(
      satisfaccion_barrio <= 2.5 ~ 0,
      satisfaccion_barrio >= 3   ~ 1,
      TRUE ~ NA_real_  # Para valores entre 2.5 y 3
    ),
    
    # Convertir a factor con labels
    satisfaccion_barrio = factor(
      satisfaccion_barrio,
      levels = c(0, 1),
      labels = c("Bajo", "Alto")
    )
  )
```


```{r}
#| label: fig-long-9
#| fig-cap: "Distribución de Subíndices de Seguridad (2016-2023)"
#| fig-cap-location: top
#| warning: false
#| message: false
#| echo: false

# Variables de seguridad (índices categóricos)
vars_seguridad <- c("seguridad_sub", "seguridad_obj")

# Preparar datos para gráfico apilado
long_seguridad_stack <- elsoc_long_graph %>%
  select(ola, all_of(vars_seguridad)) %>%
  pivot_longer(cols = all_of(vars_seguridad), 
               names_to = "variable", 
               values_to = "valor") %>%
  filter(!is.na(valor)) %>%
  group_by(ola, variable, valor) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(ola, variable) %>%
  mutate(
    total = sum(n),
    proporcion = n / total
  ) %>%
  ungroup() %>%
  mutate(
    variable_clean = case_when(
      variable == "seguridad_sub" ~ "Seguridad Subjetiva",
      variable == "seguridad_obj" ~ "Seguridad Objetiva"
    )
  )

# Vector con años correspondientes a cada ola
anos_olas <- c("2016", "2017", "2018", "2019", "2022", "2023")

ggplot(long_seguridad_stack, aes(x = ola, y = proporcion, fill = valor)) +
  geom_area(alpha = 0.7, position = "stack") +
  geom_line(aes(group = interaction(variable, valor)), 
            position = "stack", 
            linewidth = 0.5, 
            color = "white") +
  facet_wrap(~variable_clean, ncol = 2) +
  scale_fill_manual(values = c(
    "Bajo" = "#F9913D",
    "Alto" = "#2B2F3C"
  )) +
  scale_x_continuous(
    breaks = 1:6,
    labels = anos_olas
  ) +
  scale_y_continuous(
    limits = c(0, 1), 
    breaks = seq(0, 1, 0.2),
    labels = scales::percent_format(accuracy = 1)
  ) +
  labs(x = "Año", 
       y = "Proporción", 
       fill = "Nivel",
       caption = "Fuente: Elaboración Propia a partir de ELSOC 2019-2023") +
  theme_minimal() +
  theme(
    strip.text = element_text(size = 12, face = "bold"),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position       = "bottom",
    legend.direction      = "horizontal",
    legend.box            = "horizontal",
    
    legend.title          = element_text(face = "bold"),
    legend.key            = element_rect(fill = "white", color = NA),
    legend.key.height     = unit(12, "pt"),
    legend.key.width      = unit(20, "pt"),
    
    axis.text  = element_text(size = 11),
    panel.spacing = unit(1, "cm"), # mantiene separación entre paneles
    plot.caption = element_text(hjust = 0.5, size = 10, color ="black")
  ) +
  guides(fill = guide_legend(
    title.position = "top",
    label.position = "right",
    nrow = 1, byrow = TRUE,
    keywidth = unit(14, "pt"),
    keyheight = unit(10, "pt")
  ))

```
La [@fig-long-9], que presenta los índices de seguridad, presentan una dinámica fluctuante. La seguridad objetiva —asociada a hechos delictivos concretos— muestra inicialmente un predominio en el nivel bajo, que se mantiene hasta 2021. Sin embargo, en 2023 se observa un cambio drástico: la proporción de personas en nivel alto aumenta significativamente, superando al nivel bajo por primera vez en la serie. Este quiebre podría relacionarse con variaciones coyunturales en la presencia de delitos o en la difusión de información sobre seguridad pública. La seguridad subjetiva, en cambio, mantiene una trayectoria más estable, con predominio del nivel alto, aunque con ligeras oscilaciones. Su punto más favorable se da en torno a 2021, para luego experimentar un descenso en 2023, lo que evidencia que, a pesar de la mejora en indicadores objetivos, las percepciones de seguridad cotidiana no necesariamente siguen la misma tendencia.  

```{r}
#| label: fig-long-10
#| fig-cap: "Distribución subíndices de redes sociales (2019-2023)" 
#| fig-cap-location: top
#| echo: false

# Variables de redes (índices categóricos)
vars_redes <- c("comportamiento_prosocial", "ayuda_economica", "confianza_inter")

# Preparar datos para gráfico apilado
long_redes_stack <- elsoc_long_graph %>%
  select(ola, all_of(vars_redes)) %>%
  pivot_longer(cols = all_of(vars_redes), 
               names_to = "variable", 
               values_to = "valor") %>%
  filter(!is.na(valor)) %>%
  group_by(ola, variable, valor) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(ola, variable) %>%
  mutate(
    total = sum(n),
    proporcion = n / total
  ) %>%
  ungroup() %>%
  mutate(
    variable_clean = case_when (
      variable == "comportamiento_prosocial" ~ "Comportamiento  \n Prosocial",
      variable == "ayuda_economica" ~ "Ayuda Económica",
      variable == "confianza_inter" ~ "Confianza \n Interpersonal"
    )
  )

# Gráfico de área apilada
ggplot(long_redes_stack, aes(x = ola, y = proporcion, fill = valor)) +
  geom_area(alpha = 0.7, position = "stack") +
  geom_line(aes(group = interaction(variable, valor)), 
            position = "stack", 
            linewidth = 0.5, 
            color = "white") +
  facet_wrap(~variable_clean, ncol = 3) +
  scale_fill_manual(values = c(
    "Bajo" = "#F9913D",
    "Alto" = "#2B2F3C"
  )) +
  scale_x_continuous(
    breaks = 1:6,
    labels = anos_olas
  ) +
  scale_y_continuous(
    limits = c(0, 1), 
    breaks = seq(0, 1, 0.2),
    labels = scales::percent_format(accuracy = 1)
  ) +
  labs(x = "Año", 
       y = "Proporción", 
       fill = "Nivel",
       caption = "Fuente: Elaboración propia a partir de ELSOC 2019-2023") +
  theme_minimal() +
  theme(
    strip.text = element_text(size = 12, face = "bold"),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position       = "bottom",
    legend.direction      = "horizontal",
    legend.box            = "horizontal",
    
    legend.title          = element_text(face = "bold"),
    legend.key            = element_rect(fill = "white", color = NA),
    legend.key.height     = unit(12, "pt"),
    legend.key.width      = unit(20, "pt"),
    
    axis.text  = element_text(size = 11),
    panel.spacing = unit(1, "cm"),
    plot.caption = element_text(hjust = 0.5, size = 10, color ="black")
  ) +
  guides(fill = guide_legend(
    title.position = "top",
    label.position = "right",
    nrow = 1, byrow = TRUE,
    keywidth = unit(14, "pt"),
    keyheight = unit(10, "pt")
  ))
```
Por su parte,  la [@fig-long-10] presenta la distribución de índices de redes por ola (ELSOC 2016-2023), considerando tres dimensiones: Ayuda Económica, Comportamiento Prosocial y Confianza Interpersonal. En el caso de la Ayuda Económica, la proporción de personas con niveles altos se ha mantenido relativamente estable entre 2016 y 2019, con una leve disminución hacia 2022, aunque se observa un repunte respecto de años anteriores. En contraste, el Comportamiento Prosocial muestra una tendencia decreciente en los niveles altos a lo largo del período, indicando una reducción sostenida en la disposición a participar en acciones solidarias o cooperativas. Finalmente, la Confianza Interpersonal evidencia la caída más abrupta: tras mantenerse en niveles altos hasta 2019, en 2022 se observa un desplome, con predominio casi absoluto de los niveles bajos.

```{r}
#| label: fig-long-11
#| fig-cap: "Distribución Subíndices de Vínculo Territorial"
#| fig-cap-location: top
#| echo: false
#| warning: false

# Variables de Vínculos Territorial (índices categóricos)
vars_territorio <- c("sentido_pertenencia", "satisfaccion_barrio")

# Preparar datos para gráfico apilado
long_territorio_stack <- elsoc_long_graph %>%
  select(ola, all_of(vars_territorio)) %>%
  pivot_longer(cols = all_of(vars_territorio), 
               names_to = "variable", 
               values_to = "valor") %>%
  filter(!is.na(valor)) %>%
  group_by(ola, variable, valor) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(ola, variable) %>%
  mutate(
    total = sum(n),
    proporcion = n / total
  ) %>%
  ungroup() %>%
  mutate(
    variable_clean = case_when (
      variable == "sentido_pertenencia" ~ "Sentido de Pertenencia",
      variable == "satisfaccion_barrio" ~ "Satisfacción con el Barrio"
    )
  )

# Gráfico de área apilada
ggplot(long_territorio_stack, aes(x = ola, y = proporcion, fill = valor)) +
  geom_area(alpha = 0.7, position = "stack") +
  geom_line(aes(group = interaction(variable, valor)), 
            position = "stack", 
            linewidth = 0.5, 
            color = "white") +
  facet_wrap(~variable_clean, ncol = 2) +
  scale_fill_manual(values = c(
    "Bajo" = "#F9913D",
    "Alto" = "#2B2F3C"
  )) +
  scale_x_continuous(
    breaks = 1:6,
    labels = anos_olas
  ) +
  scale_y_continuous(
    limits = c(0, 1), 
    breaks = seq(0, 1, 0.2),
    labels = scales::percent_format(accuracy = 1)
  ) +
  labs(x = "Año", 
       y = "Proporción", 
       fill = "Nivel",
       caption = "Fuente: Elaboración propia a partir de ELSOC 2019-2023") +
  theme_minimal() +
  theme(
    strip.text = element_text(size = 12, face = "bold"),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position       = "bottom",
    legend.direction      = "horizontal",
    legend.box            = "horizontal",
    
    legend.title          = element_text(face = "bold"),
    legend.key            = element_rect(fill = "white", color = NA),
    legend.key.height     = unit(12, "pt"),
    legend.key.width      = unit(20, "pt"),
    
    axis.text  = element_text(size = 11),
    panel.spacing = unit(1, "cm"),   # mantiene separación entre paneles
    plot.caption = element_text(hjust = 0.5, size = 10, color ="black")
  ) +
  guides(fill = guide_legend(
    title.position = "top",
    label.position = "right",
    nrow = 1, byrow = TRUE,
    keywidth = unit(14, "pt"),
    keyheight = unit(10, "pt")
  ))
```
En cuanto al vínculo territorial, la [@fig-long-11] tanto la satisfacción con el barrio como el sentido de pertenencia se mantienen en niveles altos a lo largo del período. Si bien en 2016 se observa una proporción algo mayor de respuestas en el nivel bajo, en los años siguientes ambas dimensiones tienden a estabilizarse, superando el 80% de la población en niveles altos. Esto sugiere una fuerte estabilidad en la evaluación positiva del entorno barrial y en el apego comunitario, con variaciones mínimas entre olas.

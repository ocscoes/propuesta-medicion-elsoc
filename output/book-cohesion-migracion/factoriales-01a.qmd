# Validación de constructos 

Esta sección esta orientada a mostrar los análisis de consistencia interna entre los indicadores que conforman un constructo, para luego verificar la fiabilidad de su estructura teórica. Para ello, primero se calculará un análisis factorial exploratorio para cada subdimensión, tomando en cuenta todos los indicadores contabilizados en la propuesta anterior hecha con ELSOC (exceptuando el factor de seguridad, ya que este no tiene antecedentes en tal propuesta). A partir del número de factores encontrado en cada subdimensión, se estimarán análisis factoriales confirmatorios para corroborar si las construcciones propuestas funcionan correctamente. 

# Análisis factorial exploratorio

```{r}
#| label: cargar librerias
#| echo: false

pacman::p_load(corrplot, lavaan, psych, psy, nFactors, 
             GPArotation, devtools, ggrepel, dplyr, sjPlot, semTools)
             
```

```{r}
#| label: cargar base
#| echo: false 

elsoc <- readRDS("../../input/data/proc_data/elsoc_2022.RData")
```


## Factor seguridad

Se genera un subset de datos solamente con las variables que conforman el factor de seguridad para llevar a cabo el análisis. 

```{r}
elsoc_seg <- elsoc %>%
  select(seguridad_sat, seguridad_perc, peleas_calle, asaltos, trafico_drogas)
```

Las variables se convierten a numéricas.

```{r} 
elsoc_seg <- elsoc %>%
  select(seguridad_sat, seguridad_perc, peleas_calle, asaltos, trafico_drogas) %>%
  mutate(across(everything(), as.numeric))
```


```{r}
#| include: false

corrseg <- round(cor(elsoc_seg, use = "pairwise.complete.obs"), 2)
corrseg
```

Se calcula la matriz de correlaciones
```{r}
#| label: fig-corr-seg
#| fig-cap: Correlaciones factor seguridad
#| fig-cap-location: bottom

corrplot(corrseg,
         method = "color",       # colorea los recuadros según valor
         col = colorRampPalette(c("#2761f5", "white", "#f56c27"))(20),  # blanco a rojo
         type = "upper",         # mostrar solo la mitad superior
         order = "original",     # mantener el orden de las variables
         addCoef.col = "black",  # añadir los valores numéricos
         tl.col = "black",       # color etiquetas
         tl.srt = 45, 
         bg = "white",# rotar etiquetas
         number.cex = 0.8
)
```

```{r}
KMO(corrseg) 
cortest.bartlett(corrseg, n = 2730)
```


Ya con la matriz de correlaciones lista, pasamos a realizar el EFA

```{r}
#| label: tbl-efa-1
#| tbl-cap: Análisis factorial exploratorio del factor seguridad
#| tbl-cap-location: bottom
#| echo: false 

tab_fa(elsoc_seg, rotation = "varimax", show.comm = TRUE)
```

En @tbl-efa-1 se puede apreciar que el factorial exploratorio reconoce la existencia de dos factores latentes. Uno de ellos puede comprenderse como seguridad subjetiva, el cual integra los indicadores de satisfacción de seguridad y percepción de seguridad. Ambos indicadores poseen cargas factoriales altas, así como un alfa de Cronbach aceptable, por lo que es un factor consistente. El segundo factor contiene los indicadores de frecuencia de conflictos en el barrio, por lo que pueden agruparse bajo el factor de seguridad objetiva. El factor explica en buena medida as cargas factoriales de los tres indicadores en tanto rondan entre .6 y .8. Su alfa de Cronbach refleja una buena consistencia entre los indicadores de seguridad objetiva. 

## Factor de calidad de vida en el vecindario

Subset con los indicadores necesarios

```{r}
elsoc_barrio <- elsoc %>%
  select(confianza_vecinos, barrio_ideal, barrio_integracion, barrio_identidad,
         barrio_pertenencia, barrio_amigos, barrio_sociable, barrio_cordial,
         barrio_colaborador, conectividad, areas_verdes, barrio_limpio,
         cercania_actividad, cercania_escuelas, cercania_comercio,
         cercania_familia, tamaño_vivienda, calidad_vivienda)
```

Las variables se convierten a numéricas

```{r}
elsoc_barrio <- elsoc %>%
  select(confianza_vecinos, barrio_ideal, barrio_integracion, barrio_identidad,
         barrio_pertenencia, barrio_amigos, barrio_sociable, barrio_cordial,
         barrio_colaborador, conectividad, areas_verdes, barrio_limpio,
         cercania_actividad, cercania_escuelas, cercania_comercio,
         cercania_familia, tamaño_vivienda, calidad_vivienda) %>%
  mutate(across(everything(), as.numeric))
```


```{r}
#| include: false

corrbarrio <- round(cor(elsoc_barrio, use = "pairwise.complete.obs"), 2)
corrbarrio
```

Se calcula la matriz de correlaciones
```{r}
#| label: fig-corr-barrio
#| fig-cap: Correlaciones factor calidad de vida en el barrio
#| fig-cap-location: bottom

corrplot(corrbarrio,
         method = "color",       # colorea los recuadros según valor
         col = colorRampPalette(c("#2761f5", "white", "#f56c27"))(20),  # blanco a rojo
         type = "upper",         # mostrar solo la mitad superior
         order = "original",     # mantener el orden de las variables
         addCoef.col = "black",  # añadir los valores numéricos
         tl.col = "black",       # color etiquetas
         tl.srt = 45, 
         bg = "white",# rotar etiquetas
         number.cex = 0.8
)
```

```{r}
KMO(corrbarrio) 
cortest.bartlett(corrbarrio, n = 2730)
```

```{r}
#| label: tbl-efa-2
#| tbl-cap: Análisis factorial exploratorio del vinculación territorial
#| tbl-cap-location: bottom
#| echo: false 

tab_fa(elsoc_barrio, rotation = "varimax", show.comm = TRUE)
```

## Factor redes sociales (ola 5)

```{r}
#| label: cargar base redes
#| echo: false

elsoc_redes <- readRDS("../../input/data/proc_data/elsoc_2021.RData")
```

Seleccionamos las variables a utilizar 

```{r}
elsoc_redes <- elsoc_redes %>%
select(confianza_gen, altruismo_gen, visitar_vecino,
       reunion_pub, visita_amigos, voluntariado, donar_dinero, prestar_dinero, 
       ayuda_trabajo)
```

Pasamos las variables a numéricas 

```{r}
elsoc_redes <- elsoc_redes %>%
  select(confianza_gen, altruismo_gen, visitar_vecino,
       reunion_pub, visita_amigos, voluntariado, donar_dinero, prestar_dinero, 
       ayuda_trabajo) %>%
  mutate(across(everything(), as.numeric))
```

```{r}
hist(elsoc_redes$confianza_gen,main="Histograma del Vector",xlab="Valor",ylab="Frecuencia",col="cyan4",border="black")
```

```{r}
elsoc_redes$confianza_gen <- car::recode(elsoc_redes$confianza_gen, "c(1, 3)= 0; (2)=1")
```

```{r}
#| include: false 

corredes <- round(cor(elsoc_redes, use = "pairwise.complete.obs"), 2)
corredes
```

Estimamos la matriz de correlaciones

```{r}
#| label: fig-corr-redes
#| fig-cap: Correlaciones factor redes sociales
#| fig-cap-location: bottom

corrplot(corredes,
         method = "color",       # colorea los recuadros según valor
         col = colorRampPalette(c("#2761f5", "white", "#f56c27"))(20),  
         type = "upper",         # mostrar solo la mitad superior
         order = "original",     # mantener el orden de las variables
         addCoef.col = "black",  # añadir los valores numéricos
         tl.col = "black",       # color etiquetas
         tl.srt = 45, 
         bg = "white",# rotar etiquetas
         number.cex = 0.8
)
```

```{r}
KMO(corredes) 
cortest.bartlett(corredes, n = 2740)
```

```{r}
#| label: tbl-efa-3
#| tbl-cap: Análisis factorial exploratorio del factor redes sociales 
#| tbl-cap-location: bottom
#| echo: false 

tab_fa(elsoc_redes, rotation = "varimax", show.comm = TRUE)
```


# Análisis factorial confirmatorio

## Factor seguridad

Especificamos el modelo tomando en cuenta la propuesta teórica del documento. 
```{r}
seguridad_model <- '
subjetiva =~ seguridad_perc + seguridad_sat
objetiva =~ peleas_calle + asaltos + trafico_drogas
'
```

Se estima el modelo
```{r}
seguridad_cfa <- cfa(model = seguridad_model,
                     data = elsoc_seg,
                     estimator = "WLSMV",
                     ordered = TRUE,
                     std.lv = FALSE)
```

Visualizamos los resultados
```{r}
summary(seguridad_cfa, standardized = TRUE, fit.measures = TRUE)
```

Cargas factoriales estandarizadas
```{r}
standardizedSolution(seguridad_cfa) %>% 
  dplyr::filter(op == "=~") %>% 
  dplyr::select(lhs, rhs, est.std)
```
En este modelo todas las cargas factoriales estandarizadas son altas, donde los cinco indicadores oscilan entre el 0.7 y 0.8. Todos los indicadores son explicados en buena medida por su factor latente respectivo. 


## Factor vinculación territorial

Después de haber visto los EFA, sumado a la idea de realizar una propuesta minimalista de cohesión social, es que se propone modificar la subdimensión de "calidad de vida en el vecindario" y llamarla "vinculación territorial", la cual estaría compuesta por un factor de sentido de pertenencia territorial y otro de satisfacción con el barrio.
```{r}
barrio_model <- '
pertenencia =~ barrio_ideal + barrio_integracion + barrio_identidad + barrio_pertenencia
satisfaccion =~ barrio_amigos + barrio_sociable + barrio_cordial + barrio_colaborador
'
```

Estimación del modelo
```{r}
barrio_cfa <- cfa(model = barrio_model,
                     data = elsoc_barrio,
                     estimator = "WLSMV",
                     ordered = TRUE,
                     std.lv = FALSE)
```


```{r}
summary(barrio_cfa, standardized = TRUE, fit.measures = TRUE)
```

Cargas factoriales estandarizadas
```{r}
standardizedSolution(barrio_cfa) %>% 
  dplyr::filter(op == "=~") %>% 
  dplyr::select(lhs, rhs, est.std)
```
Todas las cargas factoriales son altas, rondando entre en 0.7 y 0.8, por lo que ambos factores estarían explicando consistentemente sus indicadores correspondientes. 

## Factor redes sociales
A partir del EFA y la idea de minimalizar la propuesta, se decide plantear un modelo con tres factores: confianza interpersonal, comportamiento prosocial y apoyo económico. Se reduce la cantidad de indicadores de 10 a 6, dos pertenecientes a cada factor.
```{r}
redes_model_conf <- '
confianza_inter =~ confianza_gen + altruismo_gen
prosocial =~ reunion_pub + voluntariado
economica =~ prestar_dinero + ayuda_trabajo
'
```

```{r}
redes_conf_cfa <- cfa(model = redes_model_conf,
                     data = elsoc_redes,
                     estimator = "WLSMV",
                     ordered = TRUE,
                     std.lv = FALSE)
```

```{r}
summary(redes_conf_cfa, standardized = TRUE, fit.measures = TRUE)
```

El modelo tiene buenos índices de ajuste, por lo que a nivel general su estructura es factible. Sin embargo, en confianza interpersonal, el indicador de confianza generalizada posee una carga factorial muy alta (.99) en comparación de altruismo generalizado (.35), por lo que se interpreta que confianza generalizada podría ser un factor por sí solo, prescindiendo del otro indicador. Esto, en consecuencia, significa que el factor de confianza interpersonal, no es del todo fiable en su medición. 

Por ello, probamos otro modelo excluyendo el factor de confianza interpersonal y manteniendo los factores de comportamiento prosocial y apoyo económico. 

```{r}
redes_model <- '
prosocial =~ reunion_pub + voluntariado
economica =~ prestar_dinero + ayuda_trabajo
'
```
```{r}
redes_cfa <- cfa(model = redes_model,
                     data = elsoc_redes,
                     estimator = "WLSMV",
                     ordered = TRUE,
                     std.lv = FALSE)
```

```{r}
summary(redes_cfa, standardized = TRUE, fit.measures = TRUE)
```

Cargas factoriales estandarizadas
```{r}
standardizedSolution(redes_cfa) %>% 
  dplyr::filter(op == "=~") %>% 
  dplyr::select(lhs, rhs, est.std)
```

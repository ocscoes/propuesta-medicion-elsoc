# Anexos {.unnumbered}

## Tabla de disponibilidad de las variables de cohesión

```{r}
#| echo: false 

library(readr)
library(DT)

datos <- read_delim("../../input/tables/variables-final.csv", 
                    delim = ";", 
                    show_col_types = FALSE)
datatable(datos)
```

## Análisis de validación de constructos

### Análisis factorial exploratorio

```{r}
#| label: cargar librerias
#| echo: false

pacman::p_load(corrplot, lavaan, psych, psy, nFactors, 
             GPArotation, devtools, ggrepel, dplyr, sjPlot, semTools)
             
```

```{r}
#| label: cargar base
#| echo: false 

elsoc <- readRDS("../../input/data/proc_data/elsoc_2022.RData")
```


**Factor seguridad**

Se genera un subset de datos solamente con las variables que conforman el factor de seguridad para llevar a cabo el análisis. 

```{r}
elsoc_seg <- elsoc %>%
  select(seguridad_sat, seguridad_perc, peleas_calle, asaltos, trafico_drogas)
```

Las variables se convierten a numéricas.

```{r} 
elsoc_seg <- elsoc %>%
  select(seguridad_sat, seguridad_perc, peleas_calle, asaltos, trafico_drogas) %>%
  mutate(across(everything(), as.numeric))
```


```{r}
#| include: false

corrseg <- round(cor(elsoc_seg, use = "pairwise.complete.obs"), 2)
corrseg
```

Se calcula la matriz de correlaciones
```{r}
#| label: fig-corr-seg
#| fig-cap: Correlaciones factor seguridad
#| fig-cap-location: bottom

corrplot(corrseg,
         method = "color",       # colorea los recuadros según valor
         col = colorRampPalette(c("#2761f5", "white", "#f56c27"))(20),  # blanco a rojo
         type = "upper",         # mostrar solo la mitad superior
         order = "original",     # mantener el orden de las variables
         addCoef.col = "black",  # añadir los valores numéricos
         tl.col = "black",       # color etiquetas
         tl.srt = 45, 
         bg = "white",# rotar etiquetas
         number.cex = 0.8
)
```

```{r}
KMO(corrseg) 
cortest.bartlett(corrseg, n = 2730)
```


Ya con la matriz de correlaciones lista, pasamos a realizar el EFA

```{r}
#| label: tbl-efa-1
#| tbl-cap: Análisis factorial exploratorio del factor seguridad
#| tbl-cap-location: bottom
#| echo: false 

tab_fa(elsoc_seg, rotation = "varimax", show.comm = TRUE)
```

En @tbl-efa-1 se puede apreciar que el factorial exploratorio reconoce la existencia de dos factores latentes. Uno de ellos puede comprenderse como seguridad subjetiva, el cual integra los indicadores de satisfacción de seguridad y percepción de seguridad. Ambos indicadores poseen cargas factoriales altas, así como un alfa de Cronbach aceptable, por lo que es un factor consistente. El segundo factor contiene los indicadores de frecuencia de conflictos en el barrio, por lo que pueden agruparse bajo el factor de seguridad objetiva. El factor explica en buena medida as cargas factoriales de los tres indicadores en tanto rondan entre .6 y .8. Su alfa de Cronbach refleja una buena consistencia entre los indicadores de seguridad objetiva. 


**Factor de calidad de vida en el vecindario**

Subset con los indicadores necesarios

```{r}
elsoc_barrio <- elsoc %>%
  select(confianza_vecinos, barrio_ideal, barrio_integracion, barrio_identidad,
         barrio_pertenencia, barrio_amigos, barrio_sociable, barrio_cordial,
         barrio_colaborador, conectividad, areas_verdes, barrio_limpio,
         cercania_actividad, cercania_escuelas, cercania_comercio,
         cercania_familia, tamaño_vivienda, calidad_vivienda)
```

Las variables se convierten a numéricas

```{r}
elsoc_barrio <- elsoc %>%
  select(confianza_vecinos, barrio_ideal, barrio_integracion, barrio_identidad,
         barrio_pertenencia, barrio_amigos, barrio_sociable, barrio_cordial,
         barrio_colaborador, conectividad, areas_verdes, barrio_limpio,
         cercania_actividad, cercania_escuelas, cercania_comercio,
         cercania_familia, tamaño_vivienda, calidad_vivienda) %>%
  mutate(across(everything(), as.numeric))
```


```{r}
#| include: false

corrbarrio <- round(cor(elsoc_barrio, use = "pairwise.complete.obs"), 2)
corrbarrio
```

Se calcula la matriz de correlaciones
```{r}
#| label: fig-corr-barrio
#| fig-cap: Correlaciones factor calidad de vida en el barrio
#| fig-cap-location: bottom

corrplot(corrbarrio,
         method = "color",       # colorea los recuadros según valor
         col = colorRampPalette(c("#2761f5", "white", "#f56c27"))(20),  # blanco a rojo
         type = "upper",         # mostrar solo la mitad superior
         order = "original",     # mantener el orden de las variables
         addCoef.col = "black",  # añadir los valores numéricos
         tl.col = "black",       # color etiquetas
         tl.srt = 45, 
         bg = "white",# rotar etiquetas
         number.cex = 0.8
)
```

```{r}
KMO(corrbarrio) 
cortest.bartlett(corrbarrio, n = 2730)
```

```{r}
#| label: tbl-efa-2
#| tbl-cap: Análisis factorial exploratorio del vinculación territorial
#| tbl-cap-location: bottom
#| echo: false 

tab_fa(elsoc_barrio, rotation = "varimax", show.comm = TRUE)
```

En @tbl-efa-2 se observan cinco factores. El factor con consistencia interna más alta (**0.83**) contiene las variables relacionadas al agrado y/o comodidad que sienten las personas respecto a su barrio, en donde solamente la variable confianza en vecinos se escapa de esta tónica. El segundo factor agrupa indicadores que dan cuenta del sentido de pertenencia de la persona en el barrio, aludiendo a aspectos identitarios. El tercer factor consiste, en general, en la proximidad física del barrio respecto a servicios. El cuarto factor mide la percepción de la persona respecto a su vivienda desde una dimensión física de espacio y calidad material. Por último, el quinto factor considera dos variables que pueden ser asociadas a las áreas verdes y limpias del barrio. Todos los factores poseen una buena consistencia interna. 

**Factor redes sociales (ola 5)**

```{r}
#| label: cargar base redes
#| echo: false

elsoc_redes <- readRDS("../../input/data/proc_data/elsoc_2021.RData")
```

Seleccionamos las variables a utilizar 

```{r}
elsoc_redes <- elsoc_redes %>%
select(confianza_gen, altruismo_gen, visitar_vecino,
       reunion_pub, visita_amigos, voluntariado, donar_dinero, prestar_dinero, 
       ayuda_trabajo)
```

Pasamos las variables a numéricas 

```{r}
elsoc_redes <- elsoc_redes %>%
  select(confianza_gen, altruismo_gen, visitar_vecino,
       reunion_pub, visita_amigos, voluntariado, donar_dinero, prestar_dinero, 
       ayuda_trabajo) %>%
  mutate(across(everything(), as.numeric))
```

```{r}
elsoc_redes$confianza_gen <- car::recode(elsoc_redes$confianza_gen, "(1)= 3; (2)=1; (3)=2")
elsoc_redes$altruismo_gen <- car::recode(elsoc_redes$altruismo_gen, "(1)= 3; (2)=1; (3)=2")
```

```{r}
#| include: false 

corredes <- round(cor(elsoc_redes, use = "pairwise.complete.obs"), 2)
corredes
```

Estimamos la matriz de correlaciones

```{r}
#| label: fig-corr-redes
#| fig-cap: Correlaciones factor redes sociales
#| fig-cap-location: bottom

corrplot(corredes,
         method = "color",       # colorea los recuadros según valor
         col = colorRampPalette(c("#2761f5", "white", "#f56c27"))(20),  
         type = "upper",         # mostrar solo la mitad superior
         order = "original",     # mantener el orden de las variables
         addCoef.col = "black",  # añadir los valores numéricos
         tl.col = "black",       # color etiquetas
         tl.srt = 45, 
         bg = "white",# rotar etiquetas
         number.cex = 0.8
)
```

```{r}
KMO(corredes) 
cortest.bartlett(corredes, n = 2740)
```

```{r}
#| label: tbl-efa-3
#| tbl-cap: Análisis factorial exploratorio del factor redes sociales 
#| tbl-cap-location: bottom
#| echo: false 

tab_fa(elsoc_redes, rotation = "varimax", show.comm = TRUE)
```

@tbl-efa-3 refleja que, después del EFA, se sugiere la existencia de 4 factores. El primero de ellos agrupa dos variables que pueden ser relacionadas a la confianza interpersonal. El segundo factor contiene variables que encuentran sentido dentro de la ayuda económica que puede brindarle una persona a otra, ya sea de una manera directa como donar y/o prestar dinero, o de modo indirecto como lo es ayudar a encontrar trabajo a otro. El factor aborda dos variables que refieren a dar y recibir una visita a personas cercanas, tales como vecinos y amigos, respectivamente. El cuarto y último factor agrupa dos variables, una sobre asistencia reuniones públicas y otra sobre participación en voluntariados, actitudes que podrían entenderse como prosociales. 

### Análisis factorial confirmatorio

**Factor seguridad**

Especificamos el modelo tomando en cuenta la propuesta teórica del documento. 
```{r}
seguridad_model <- '
subjetiva =~ seguridad_perc + seguridad_sat
objetiva =~ peleas_calle + asaltos + trafico_drogas
'
```

Se estima el modelo
```{r}
seguridad_cfa <- cfa(model = seguridad_model,
                     data = elsoc_seg,
                     estimator = "WLSMV",
                     ordered = TRUE,
                     std.lv = FALSE)
```

Visualizamos los resultados
```{r}
summary(seguridad_cfa, standardized = TRUE, fit.measures = TRUE)
```

Cargas factoriales estandarizadas
```{r}
standardizedSolution(seguridad_cfa) %>% 
  dplyr::filter(op == "=~") %>% 
  dplyr::select(lhs, rhs, est.std)
```
En este modelo todas las cargas factoriales estandarizadas son altas, donde los cinco indicadores oscilan entre el 0.7 y 0.8. Todos los indicadores son explicados en buena medida por su factor latente respectivo. 


**Factor vinculación territorial**

Después de haber visto los EFA, sumado a la idea de realizar una propuesta minimalista de cohesión social, es que se propone modificar la subdimensión de "calidad de vida en el vecindario" y llamarla "vinculación territorial", la cual estaría compuesta por un factor de sentido de pertenencia territorial y otro de satisfacción con el barrio.
```{r}
barrio_model <- '
pertenencia =~ barrio_ideal + barrio_integracion + barrio_identidad + barrio_pertenencia
satisfaccion =~ barrio_amigos + barrio_sociable + barrio_cordial + barrio_colaborador
'
```

Estimación del modelo
```{r}
barrio_cfa <- cfa(model = barrio_model,
                     data = elsoc_barrio,
                     estimator = "WLSMV",
                     ordered = TRUE,
                     std.lv = FALSE)
```


```{r}
summary(barrio_cfa, standardized = TRUE, fit.measures = TRUE)
```

Cargas factoriales estandarizadas
```{r}
standardizedSolution(barrio_cfa) %>% 
  dplyr::filter(op == "=~") %>% 
  dplyr::select(lhs, rhs, est.std)
```
Todas las cargas factoriales son altas, rondando entre en 0.7 y 0.8, por lo que ambos factores estarían explicando consistentemente sus indicadores correspondientes. 

 
**Factor redes sociales**

A partir del EFA y la idea de minimalizar la propuesta, se decide plantear un modelo con tres factores: confianza interpersonal, comportamiento prosocial y apoyo económico. Se reduce la cantidad de indicadores de 10 a 6, dos pertenecientes a cada factor. Si bien, el factor de visita a personas cercanas tenía buena consistencia interna, se descartó de la propuesta por falta de relevancia teórica con lo que respecta a la cohesión social.
```{r}
redes_model_conf <- '
confianza_inter =~ confianza_gen + altruismo_gen
prosocial =~ reunion_pub + voluntariado
economica =~ prestar_dinero + ayuda_trabajo
'
```

```{r}
redes_conf_cfa <- cfa(model = redes_model_conf,
                     data = elsoc_redes,
                     estimator = "WLSMV",
                     ordered = TRUE,
                     std.lv = FALSE)
```

```{r}
summary(redes_conf_cfa, standardized = TRUE, fit.measures = TRUE)
```

El modelo tiene buenos índices de ajuste, por lo que a nivel general su estructura es factible. Sin embargo, en confianza interpersonal, el indicador de confianza social generalizada posee una carga factorial muy alta (sobre 1) en comparación de altruismo social generalizado (.41), por lo que se interpreta que confianza generalizada podría ser un factor por sí solo, prescindiendo del otro indicador. Aun así, esto puede ser solucionado con una restricción de igualdad en la especificación del modelo, lo que ayudaría a preservar su estabilidad y justificación para ser parte la propuesta. 

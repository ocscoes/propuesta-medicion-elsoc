---
author: "Equipo EDUMER"
editor_options: 
  chunk_output_type: console
---

```{r}
#| echo: false
#| message: false
#| warning: false

library(knitr)
knitr::opts_chunk$set(echo = FALSE, 
                      include = TRUE, 
                      warning = FALSE, 
                      message = FALSE)

table_format <- if(is_html_output()) {
  "html"
} else if(is_latex_output()) {
  "latex"
}
table_format2 <- if(is_html_output()) {
  T
} else if(is_latex_output()) {
  F
}

options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")

if (! require("pacman")) install.packages("pacman")

pacman::p_load(tidyverse,
               sjmisc, 
               here,
               sjlabelled,
               srvyr,
               ggdist,
               purrr,
               rlang)


options(scipen=999)
rm(list = ls())

load(here("input/data/proc_data/db_long.RData"))

db_pond <- db %>% 
  as_survey_design(ids = segmento, 
                   strata = estrato, 
                   weights = ponderador_long_total,
                   nest = T)
```


# 3. Cohesi칩n social horizontal y migraci칩n {.xlarge data-background-color="#444a5e"}

<br>

:::: {style="font-size: 200%;"}


[**3.1. Seguridad**]{style="color:yellow;"}

[**3.2. V칤nculos territoriales**]{style="color:yellow;"}

[**3.3. Redes**]{style="color:yellow;"}


::::


# 3. Cohesi칩n social horizontal y migraci칩n {.xlarge data-background-color="#444a5e"}

<br>

:::: {style="font-size: 200%;"}


[**3.1. Seguridad**]{style="color:yellow;"}

[**3.2. V칤nculos territoriales**]{style="color:grey;"}

[**3.3. Redes**]{style="color:grey;"}


::::


---

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
db_pond %>%
  select(wave, seguridad_sub, restriccion_migrantes) %>%
  mutate(
    # calculamos media y sd una vez
    media_seg = mean(seguridad_sub, na.rm = TRUE),
    sd_seg    = sd(seguridad_sub, na.rm = TRUE),
    
    seguridad_sub = case_when(
      seguridad_sub <= media_seg - sd_seg ~ "Baja seguridad",
      seguridad_sub >  media_seg - sd_seg & seguridad_sub < media_seg + sd_seg ~ "Mediana seguridad",
      seguridad_sub >= media_seg + sd_seg ~ "Alta seguridad"
    ),
    seguridad_sub = factor(
      seguridad_sub,
      levels = c("Baja seguridad", "Mediana seguridad", "Alta seguridad")
    )
  ) %>%
  tidyr::drop_na() %>%
  filter(restriccion_migrantes == "Muy en desacuerdo") %>%
  group_by(wave, seguridad_sub) %>%
  survey_count(vartype = NULL) %>%
  ungroup() %>%
  group_by(wave) %>%
  mutate(
    prop  = 100 * n / sum(n),                 
    label = scales::percent(prop/100, accuracy = 0.1),
    grupo = "Muy en desacuerdo restricci칩n acceso migrantes"   # 游녣 variable para la leyenda
  ) %>%
  ggplot(aes(x = wave, y = prop, group = seguridad_sub)) +
  geom_point(aes(color = grupo), size = 3) +   # 游녣 color mapeado
  geom_line(aes(color = grupo), linewidth = 1) +
  facet_wrap(~seguridad_sub) +
  geom_text(
    aes(label = label),
    color = "#522A6F",   # aqu칤 s칤 puede quedar fijo, no es necesario en la leyenda
    vjust = -1, size = 4, show.legend = FALSE
  ) +
  scale_color_manual(
    name = NULL,   # 游녣 t칤tulo de la leyenda (puedes dejarlo NULL o poner texto)
    values = c("Muy en desacuerdo restricci칩n acceso migrantes" = "#522A6F")
  ) +
  scale_y_continuous(
    labels = function(p){paste0(p, "%")},
    limits = c(0,100),
    breaks = seq(0,100, by = 25),
    expand = expansion(mult = c(0.02, 0.08))
  ) +
  labs(
    title = "Seguridad percibida y restricci칩n de acceso a migrantes",
    subtitle = "Porcentaje que responde...",
    x = NULL,
    y = NULL,
    caption = "Fuente: elaboraci칩n propia con datos agrupados de ELSOC 2016-2023"
  ) +
  theme_bw() +
  theme(
    plot.title   = element_text(size = 24, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 14),
    
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    axis.text.x  = element_text(size = 16),
    axis.text.y  = element_text(size = 16),
    
    legend.title = element_text(size = 16, face = "bold"),
    legend.text  = element_text(size = 14),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position  = "top",
    legend.direction = "horizontal",
    strip.text = element_text(size = 18, face = "bold", hjust = 0.5)
  )

```

::: {.notes}


:::
---

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"

db_pond %>%
  select(wave, seguridad_sub, simpatia_migrantes) %>%
   mutate(
    # calculamos media y sd una vez
    media_seg = mean(seguridad_sub, na.rm = TRUE),
    sd_seg    = sd(seguridad_sub, na.rm = TRUE),
    
    seguridad_sub = case_when(
      seguridad_sub <= media_seg - sd_seg ~ "Baja seguridad",
      seguridad_sub >  media_seg - sd_seg & seguridad_sub < media_seg + sd_seg ~ "Mediana seguridad",
      seguridad_sub >= media_seg + sd_seg ~ "Alta seguridad"
    ),
    seguridad_sub = factor(
      seguridad_sub,
      levels = c("Baja seguridad", "Mediana seguridad", "Alta seguridad")
    )
  ) %>%
  tidyr::drop_na() %>%
  filter(simpatia_migrantes == "Mucho + bastante") %>%
  group_by(wave, seguridad_sub) %>%
  survey_count(vartype = NULL) %>%
  ungroup() %>%
  group_by(wave) %>%
  mutate(
    prop  = 100 * n / sum(n),                 
    label = scales::percent(prop/100, accuracy = 0.1),
    grupo = "Mucho + bastante simpat칤a hacia migrantes"   # 游녣 variable para la leyenda
  ) %>%
  ggplot(aes(x = wave, y = prop, group = seguridad_sub)) +
  geom_point(aes(color = grupo), size = 3) +   # 游녣 color mapeado
  geom_line(aes(color = grupo), linewidth = 1) +
  facet_wrap(~seguridad_sub) +
  geom_text(
    aes(label = label),
    color = "#522A6F",   # aqu칤 s칤 puede quedar fijo, no es necesario en la leyenda
    vjust = -1, size = 4, show.legend = FALSE
  ) +
  scale_color_manual(
    name = NULL,   # 游녣 t칤tulo de la leyenda (puedes dejarlo NULL o poner texto)
    values = c("Mucho + bastante simpat칤a hacia migrantes" = "#522A6F")
  ) +
  scale_y_continuous(
    labels = function(p){paste0(p, "%")},
    limits = c(0,100),
    breaks = seq(0,100, by = 25),
    expand = expansion(mult = c(0.02, 0.08))
  ) +
  labs(
    title = "Seguridad percibida y simpat칤a hacia migrantes",
    subtitle = "Porcentaje que responde...",
   x = NULL,
    y = NULL,
    caption = "Fuente: elaboraci칩n propia con datos agrupados de ELSOC 2016-2023"
  ) +
  theme_bw() +
  theme(
    plot.title   = element_text(size = 24, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 14),
    
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    axis.text.x  = element_text(size = 16),
    axis.text.y  = element_text(size = 16),
    
    legend.title = element_text(size = 16, face = "bold"),
    legend.text  = element_text(size = 14),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position  = "top",
    legend.direction = "horizontal",
    strip.text = element_text(size = 18, face = "bold", hjust = 0.5)
  )

```

::: {.notes}

:::
---

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
db_pond %>%
  select(wave, seguridad_sub, contacto_migrantes) %>%
  mutate(
    # calculamos media y sd una vez
    media_seg = mean(seguridad_sub, na.rm = TRUE),
    sd_seg    = sd(seguridad_sub, na.rm = TRUE),
    
    seguridad_sub = case_when(
      seguridad_sub <= media_seg - sd_seg ~ "Baja seguridad",
      seguridad_sub >  media_seg - sd_seg & seguridad_sub < media_seg + sd_seg ~ "Mediana seguridad",
      seguridad_sub >= media_seg + sd_seg ~ "Alta seguridad"
    ),
    seguridad_sub = factor(
      seguridad_sub,
      levels = c("Baja seguridad", "Mediana seguridad", "Alta seguridad")
    )
  ) %>%
  tidyr::drop_na() %>%
  filter(contacto_migrantes == "Muy + bastante amistosa") %>%
  group_by(wave, seguridad_sub) %>%
  survey_count(vartype = NULL) %>%
  ungroup() %>%
  group_by(wave) %>%
  mutate(
    prop  = 100 * n / sum(n),                 
    label = scales::percent(prop/100, accuracy = 0.1),
    grupo = "Contacto muy + bastante amistoso con migrantes"   # 游녣 variable para la leyenda
  ) %>%
  ggplot(aes(x = wave, y = prop, group = seguridad_sub)) +
  geom_point(aes(color = grupo), size = 3) +   # 游녣 color mapeado
  geom_line(aes(color = grupo), linewidth = 1) +
  facet_wrap(~seguridad_sub) +
  geom_text(
    aes(label = label),
    color = "#522A6F",   # aqu칤 s칤 puede quedar fijo, no es necesario en la leyenda
    vjust = -1, size = 4, show.legend = FALSE
  ) +
  scale_color_manual(
    name = NULL,   # 游녣 t칤tulo de la leyenda (puedes dejarlo NULL o poner texto)
    values = c("Contacto muy + bastante amistoso con migrantes" = "#522A6F")
  ) +
  scale_y_continuous(
    labels = function(p){paste0(p, "%")},
    limits = c(0,100),
    breaks = seq(0,100, by = 25),
    expand = expansion(mult = c(0.02, 0.08))
  ) +
  labs(
    title = "Seguridad percibida y contacto positivo con migrantes",
    subtitle = "Porcentaje que responde...",
    x = NULL,
    y = NULL,
    caption = "Fuente: elaboraci칩n propia con datos agrupados de ELSOC 2016-2023"
  ) +
  theme_bw() +
  theme(
    plot.title   = element_text(size = 24, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 14),
    
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    axis.text.x  = element_text(size = 16),
    axis.text.y  = element_text(size = 16),
    
    legend.title = element_text(size = 16, face = "bold"),
    legend.text  = element_text(size = 14),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position  = "top",
    legend.direction = "horizontal",
    strip.text = element_text(size = 18, face = "bold", hjust = 0.5)
  )

```

::: {.notes}

:::

# 3. Cohesi칩n social horizontal y migraci칩n {.xlarge data-background-color="#444a5e"}

<br>

:::: {style="font-size: 200%;"}


[**3.1. Seguridad**]{style="color:grey;"}

[**3.2. V칤nculos territoriales**]{style="color:yellow;"}

[**3.3. Redes**]{style="color:grey;"}


::::


---

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
db_pond %>%
  select(wave, sentido_pertenencia, perdida_identidad) %>%
  mutate(
    # calculamos media y sd una vez
    media_seg = mean(sentido_pertenencia, na.rm = TRUE),
    sd_seg    = sd(sentido_pertenencia, na.rm = TRUE),
    
    sentido_pertenencia = case_when(
      sentido_pertenencia <= media_seg - sd_seg ~ "Baja pertenencia",
      sentido_pertenencia >  media_seg - sd_seg & sentido_pertenencia < media_seg + sd_seg ~ "Mediana pertenencia",
      sentido_pertenencia >= media_seg + sd_seg ~ "Alta pertenencia"
    ),
    sentido_pertenencia = factor(
      sentido_pertenencia,
      levels = c("Baja pertenencia", "Mediana pertenencia", "Alta pertenencia")
    )
  ) %>%
  tidyr::drop_na()  %>% 
  filter(perdida_identidad == "Muy en desacuerdo") %>%
  group_by(wave, sentido_pertenencia) %>%
  survey_count(vartype = NULL) %>%
  ungroup() %>%
  group_by(wave) %>%
  mutate(
    prop  = 100 * n / sum(n),                 
    label = scales::percent(prop/100, accuracy = 0.1),
    grupo = "Muy en desacuerdo con p칠rdida identidad nacional por migrantes"   # 游녣 variable para la leyenda
  ) %>%
  ggplot(aes(x = wave, y = prop, group = sentido_pertenencia)) +
  geom_point(aes(color = grupo), size = 3) +   # 游녣 color mapeado
  geom_line(aes(color = grupo), linewidth = 1) +
  facet_wrap(~sentido_pertenencia) +
  geom_text(
    aes(label = label),
    color = "#7ABA21",   # aqu칤 s칤 puede quedar fijo, no es necesario en la leyenda
    vjust = -1, size = 4, show.legend = FALSE
  ) +
  scale_color_manual(
    name = NULL,   # 游녣 t칤tulo de la leyenda (puedes dejarlo NULL o poner texto)
    values = c("Muy en desacuerdo con p칠rdida identidad nacional por migrantes" = "#7ABA21")
  ) +
  scale_y_continuous(
    labels = function(p){paste0(p, "%")},
    limits = c(0,100),
    breaks = seq(0,100, by = 25),
    expand = expansion(mult = c(0.02, 0.08))
  ) +
  labs(
    title = "Sentido pertenencia barrial y p칠rdida de identidad nacional",
    subtitle = "Porcentaje que responde...",
     x = NULL,
    y = NULL,
    caption = "Fuente: elaboraci칩n propia con datos agrupados de ELSOC 2016-2023"
  ) +
  theme_bw() +
  theme(
    plot.title   = element_text(size = 24, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 14),
    
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    axis.text.x  = element_text(size = 16),
    axis.text.y  = element_text(size = 16),
    
    legend.title = element_text(size = 16, face = "bold"),
    legend.text  = element_text(size = 14),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position  = "top",
    legend.direction = "horizontal",
    strip.text = element_text(size = 18, face = "bold", hjust = 0.5)
  )


```

::: {.notes}
:::

---

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
db_pond %>%
  select(wave, satisfaccion_barrio, contacto_migrantes) %>%
    mutate(
    # calculamos media y sd una vez
    media_seg = mean(satisfaccion_barrio, na.rm = TRUE),
    sd_seg    = sd(satisfaccion_barrio, na.rm = TRUE),
    
    satisfaccion_barrio = case_when(
      satisfaccion_barrio <= media_seg - sd_seg ~ "Baja satisfacci칩n",
      satisfaccion_barrio >  media_seg - sd_seg & satisfaccion_barrio < media_seg + sd_seg ~ "Mediana satisfacci칩n",
      satisfaccion_barrio >= media_seg + sd_seg ~ "Alta satisfacci칩n"
    ),
    satisfaccion_barrio = factor(
      satisfaccion_barrio,
      levels = c("Baja satisfacci칩n", "Mediana satisfacci칩n", "Alta satisfacci칩n")
    )
  ) %>%
  tidyr::drop_na()%>%
  filter(contacto_migrantes == "Muy + bastante amistosa") %>%
  group_by(wave, satisfaccion_barrio) %>%
  survey_count(vartype = NULL) %>%
  ungroup() %>%
  group_by(wave) %>%
  mutate(
    prop  = 100 * n / sum(n),                 
    label = scales::percent(prop/100, accuracy = 0.1),
    grupo = "Contacto muy + bastante amistoso con migrantes"   # 游녣 variable para la leyenda
  ) %>%
  ggplot(aes(x = wave, y = prop, group = satisfaccion_barrio)) +
  geom_point(aes(color = grupo), size = 3) +   # 游녣 color mapeado
  geom_line(aes(color = grupo), linewidth = 1) +
  facet_wrap(~satisfaccion_barrio) +
  geom_text(
    aes(label = label),
    color = "#7ABA21",   # aqu칤 s칤 puede quedar fijo, no es necesario en la leyenda
    vjust = -1, size = 4, show.legend = FALSE
  ) +
  scale_color_manual(
    name = NULL,   # 游녣 t칤tulo de la leyenda (puedes dejarlo NULL o poner texto)
    values = c("Contacto muy + bastante amistoso con migrantes" = "#7ABA21")
  ) +
  scale_y_continuous(
    labels = function(p){paste0(p, "%")},
    limits = c(0,100),
    breaks = seq(0,100, by = 25),
    expand = expansion(mult = c(0.02, 0.08))
  ) +
  labs(
    title = "Satisfacci칩n barrial y contacto positivo con migrantes",
    subtitle = "Porcentaje que responde...",
 x = NULL,
    y = NULL,
    caption = "Fuente: elaboraci칩n propia con datos agrupados de ELSOC 2016-2023"
  ) +
  theme_bw() +
  theme(
    plot.title   = element_text(size = 24, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 14),
    
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    axis.text.x  = element_text(size = 16),
    axis.text.y  = element_text(size = 16),
    
    legend.title = element_text(size = 16, face = "bold"),
    legend.text  = element_text(size = 14),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position  = "top",
    legend.direction = "horizontal",
    strip.text = element_text(size = 18, face = "bold", hjust = 0.5)
  )

```

::: {.notes}
:::

---

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"

db_pond %>%
  select(wave, satisfaccion_barrio, simpatia_migrantes) %>%
  mutate(
    # calculamos media y sd una vez
    media_seg = mean(satisfaccion_barrio, na.rm = TRUE),
    sd_seg    = sd(satisfaccion_barrio, na.rm = TRUE),
    
    satisfaccion_barrio = case_when(
      satisfaccion_barrio <= media_seg - sd_seg ~ "Baja satisfacci칩n",
      satisfaccion_barrio >  media_seg - sd_seg & satisfaccion_barrio < media_seg + sd_seg ~ "Mediana satisfacci칩n",
      satisfaccion_barrio >= media_seg + sd_seg ~ "Alta satisfacci칩n"
    ),
    satisfaccion_barrio = factor(
      satisfaccion_barrio,
      levels = c("Baja satisfacci칩n", "Mediana satisfacci칩n", "Alta satisfacci칩n")
    )
  ) %>%
  tidyr::drop_na()  %>% 
  filter(simpatia_migrantes == "Mucho + bastante") %>%
  group_by(wave, satisfaccion_barrio) %>%
  survey_count(vartype = NULL) %>%
  ungroup() %>%
  group_by(wave) %>%
  mutate(
    prop  = 100 * n / sum(n),                 
    label = scales::percent(prop/100, accuracy = 0.1),
    grupo = "Mucho + bastante simpat칤a hacia migrantes"   # 游녣 variable para la leyenda
  ) %>%
  ggplot(aes(x = wave, y = prop, group = satisfaccion_barrio)) +
  geom_point(aes(color = grupo), size = 3) +   # 游녣 color mapeado
  geom_line(aes(color = grupo), linewidth = 1) +
  facet_wrap(~satisfaccion_barrio) +
  geom_text(
    aes(label = label),
    color = "#7ABA21",   # aqu칤 s칤 puede quedar fijo, no es necesario en la leyenda
    vjust = -1, size = 4, show.legend = FALSE
  ) +
  scale_color_manual(
    name = NULL,   # 游녣 t칤tulo de la leyenda (puedes dejarlo NULL o poner texto)
    values = c("Mucho + bastante simpat칤a hacia migrantes" = "#7ABA21")
  ) +
  scale_y_continuous(
    labels = function(p){paste0(p, "%")},
    limits = c(0,100),
    breaks = seq(0,100, by = 25),
    expand = expansion(mult = c(0.02, 0.08))
  ) +
  labs(
    title = "Satisfacci칩n barrial y simpat칤a hacia migrantes",
    subtitle = "Porcentaje que responde...",
 x = NULL,
    y = NULL,
    caption = "Fuente: elaboraci칩n propia con datos agrupados de ELSOC 2016-2023"
  ) +
  theme_bw() +
  theme(
    plot.title   = element_text(size = 24, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 14),
    
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    axis.text.x  = element_text(size = 16),
    axis.text.y  = element_text(size = 16),
    
    legend.title = element_text(size = 16, face = "bold"),
    legend.text  = element_text(size = 14),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position  = "top",
    legend.direction = "horizontal",
    strip.text = element_text(size = 18, face = "bold", hjust = 0.5)
  )

```
::: {.notes}
:::

# 3. Cohesi칩n social horizontal y migraci칩n {.xlarge data-background-color="#444a5e"}

<br>

:::: {style="font-size: 200%;"}


[**3.1. Seguridad**]{style="color:grey;"}

[**3.2. V칤nculos territoriales**]{style="color:grey;"}

[**3.3. Redes**]{style="color:yellow;"}


::::

---


```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"

db_pond %>%
  select(wave, comportamiento_prosocial, restriccion_migrantes) %>%
  mutate(
    comportamiento_prosocial = case_when(
      comportamiento_prosocial <= 1.5 ~ "Bajo comportamiento\nprosocial",
      comportamiento_prosocial == 2 ~ "Mediano comportamiento\nprosocial",
      comportamiento_prosocial >= 2.5 ~ "Alto comportamiento\nprosocial"
    ),
    comportamiento_prosocial = factor(comportamiento_prosocial, 
    levels = c("Bajo comportamiento\nprosocial", "Mediano comportamiento\nprosocial", "Alto comportamiento\nprosocial"))
  ) %>%
  tidyr::drop_na() %>%
  filter(restriccion_migrantes == "Muy en desacuerdo") %>%
  group_by(wave, comportamiento_prosocial) %>%
  survey_count(vartype = NULL) %>%
  ungroup() %>%
  group_by(wave) %>%
  mutate(
    prop  = 100 * n / sum(n),                 
    label = scales::percent(prop/100, accuracy = 0.1),
    grupo = "Muy en desacuerdo con restricci칩n a ingreso de migrantes"   # 游녣 variable para la leyenda
  ) %>%
  ggplot(aes(x = wave, y = prop, group = comportamiento_prosocial)) +
  geom_point(aes(color = grupo), size = 3) +   # 游녣 color mapeado
  geom_line(aes(color = grupo), linewidth = 1) +
  facet_wrap(~comportamiento_prosocial) +
  geom_text(
    aes(label = label),
    color = "#F9913D",   # aqu칤 s칤 puede quedar fijo, no es necesario en la leyenda
    vjust = -1, size = 4, show.legend = FALSE
  ) +
  scale_color_manual(
    name = NULL,   # 游녣 t칤tulo de la leyenda (puedes dejarlo NULL o poner texto)
    values = c("Muy en desacuerdo con restricci칩n a ingreso de migrantes" = "#F9913D")
  ) +
  scale_y_continuous(
    labels = function(p){paste0(p, "%")},
    limits = c(0,100),
    breaks = seq(0,100, by = 25),
    expand = expansion(mult = c(0.02, 0.08))
  ) +
  labs(
    title = "Comportamiento prosocial y restricci칩n de ingreso a migrantes",
    subtitle = "Porcentaje que responde...",
 x = NULL,
    y = NULL,
    caption = "Fuente: elaboraci칩n propia con datos agrupados de ELSOC 2016-2023"
  ) +
  theme_bw() +
  theme(
    plot.title   = element_text(size = 24, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 14),
    
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    axis.text.x  = element_text(size = 16),
    axis.text.y  = element_text(size = 16),
    
    legend.title = element_text(size = 16, face = "bold"),
    legend.text  = element_text(size = 14),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position  = "top",
    legend.direction = "horizontal",
    strip.text = element_text(size = 18, face = "bold", hjust = 0.5)
  )

```

::: {.notes}
:::

---

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
db_pond %>%
  select(wave, comportamiento_prosocial, contacto_migrantes) %>%
  mutate(
    comportamiento_prosocial = case_when(
      comportamiento_prosocial <= 1.5 ~ "Bajo comportamiento\nprosocial",
      comportamiento_prosocial == 2 ~ "Mediano comportamiento\nprosocial",
      comportamiento_prosocial >= 2.5 ~ "Alto comportamiento\nprosocial"
    ),
    comportamiento_prosocial = factor(comportamiento_prosocial, 
    levels = c("Bajo comportamiento\nprosocial", "Mediano comportamiento\nprosocial", "Alto comportamiento\nprosocial"))
  ) %>%
  tidyr::drop_na() %>%
  filter(contacto_migrantes == "Muy + bastante amistosa") %>%
  group_by(wave, comportamiento_prosocial) %>%
  survey_count(vartype = NULL) %>%
  ungroup() %>%
  group_by(wave) %>%
  mutate(
    prop  = 100 * n / sum(n),                 
    label = scales::percent(prop/100, accuracy = 0.1),
    grupo = "Contacto muy + bastante amistoso con migrantes"   # 游녣 variable para la leyenda
  ) %>%
  ggplot(aes(x = wave, y = prop, group = comportamiento_prosocial)) +
  geom_point(aes(color = grupo), size = 3) +   # 游녣 color mapeado
  geom_line(aes(color = grupo), linewidth = 1) +
  facet_wrap(~comportamiento_prosocial) +
  geom_text(
    aes(label = label),
    color = "#F9913D",   # aqu칤 s칤 puede quedar fijo, no es necesario en la leyenda
    vjust = -1, size = 4, show.legend = FALSE
  ) +
  scale_color_manual(
    name = NULL,   # 游녣 t칤tulo de la leyenda (puedes dejarlo NULL o poner texto)
    values = c("Contacto muy + bastante amistoso con migrantes" = "#F9913D")
  ) +
  scale_y_continuous(
    labels = function(p){paste0(p, "%")},
    limits = c(0,100),
    breaks = seq(0,100, by = 25),
    expand = expansion(mult = c(0.02, 0.08))
  ) +
  labs(
    title = "Comportamiento prosocial y contacto positivo migrantes",
    subtitle = "Porcentaje que responde...",
 x = NULL,
      y = NULL,
    caption = "Fuente: elaboraci칩n propia con datos agrupados de ELSOC 2016-2023"
  ) +
  theme_bw() +
  theme(
    plot.title   = element_text(size = 24, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 14),
    
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    axis.text.x  = element_text(size = 16),
    axis.text.y  = element_text(size = 16),
    
    legend.title = element_text(size = 16, face = "bold"),
    legend.text  = element_text(size = 14),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position  = "top",
    legend.direction = "horizontal",
    strip.text = element_text(size = 18, face = "bold", hjust = 0.5)
  )

```

::: {.notes}
:::
---

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"

db_pond %>%
  select(wave, comportamiento_prosocial, perdida_identidad) %>%
  mutate(
    comportamiento_prosocial = case_when(
      comportamiento_prosocial <= 1.5 ~ "Bajo comportamiento\nprosocial",
      comportamiento_prosocial == 2 ~ "Mediano comportamiento\nprosocial",
      comportamiento_prosocial >= 2.5 ~ "Alto comportamiento\nprosocial"
    ),
    comportamiento_prosocial = factor(comportamiento_prosocial, 
    levels = c("Bajo comportamiento\nprosocial", "Mediano comportamiento\nprosocial", "Alto comportamiento\nprosocial"))
  ) %>%
  tidyr::drop_na() %>%
  filter(perdida_identidad == "Muy en desacuerdo") %>%
  group_by(wave, comportamiento_prosocial) %>%
  survey_count(vartype = NULL) %>%
  ungroup() %>%
  group_by(wave) %>%
  mutate(
    prop  = 100 * n / sum(n),                 
    label = scales::percent(prop/100, accuracy = 0.1),
    grupo = "Muy en desacuerdo con p칠rdida de identidad nacional por migrantes"   # 游녣 variable para la leyenda
  ) %>%
  ggplot(aes(x = wave, y = prop, group = comportamiento_prosocial)) +
  geom_point(aes(color = grupo), size = 3) +   # 游녣 color mapeado
  geom_line(aes(color = grupo), linewidth = 1) +
  facet_wrap(~comportamiento_prosocial) +
  geom_text(
    aes(label = label),
    color = "#F9913D",   # aqu칤 s칤 puede quedar fijo, no es necesario en la leyenda
    vjust = -1, size = 4, show.legend = FALSE
  ) +
  scale_color_manual(
    name = NULL,   # 游녣 t칤tulo de la leyenda (puedes dejarlo NULL o poner texto)
    values = c("Muy en desacuerdo con p칠rdida de identidad nacional por migrantes" = "#F9913D")
  ) +
  scale_y_continuous(
    labels = function(p){paste0(p, "%")},
    limits = c(0,100),
    breaks = seq(0,100, by = 25),
    expand = expansion(mult = c(0.02, 0.08))
  ) +
  labs(
    title = "Comportamiento prosocial y p칠rdida de identidad nacional \npor migrantes",
    subtitle = "Porcentaje que responde...",
    x = NULL,
    y = NULL,
    caption = "Fuente: elaboraci칩n propia con datos agrupados de ELSOC 2016-2023"
  ) +
  theme_bw() +
  theme(
    plot.title   = element_text(size = 24, face = "bold", hjust = 0),
    plot.subtitle = element_text(size = 16, hjust = 0),
    plot.caption = element_text(size = 14),
    
    axis.title.x = element_text(size = 18),
    axis.title.y = element_text(size = 18),
    axis.text.x  = element_text(size = 16),
    axis.text.y  = element_text(size = 16),
    
    legend.title = element_text(size = 16, face = "bold"),
    legend.text  = element_text(size = 14),
    legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
    legend.background     = element_rect(fill = "white", color = NA),
    legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
    legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
    
    legend.position  = "top",
    legend.direction = "horizontal",
    strip.text = element_text(size = 18, face = "bold", hjust = 0.5)
  )

```

::: {.notes}
:::
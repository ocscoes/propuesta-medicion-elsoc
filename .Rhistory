vjust = -0.5,
size = 4,
fontface = "bold"
) +
facet_wrap(~grupo, ncol = 2) +
scale_fill_manual(
values = c("Alta seguridad" = "#2b2f3c", "Baja seguridad" = "#f9913d"),
breaks = c("Baja seguridad", "Alta seguridad"),
name = "Seguridad objetiva"
) +
labs(
title = "Percepción de Seguridad y desempleo inmigrantes"
x = "Percepción de desempleo debido a inmigrantes",
y = "Porcentaje",
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2022"
) +
theme_minimal() +
scale_y_continuous(
labels = scales::percent_format(accuracy = 1, scale = 1),
breaks = scales::pretty_breaks(n = 5),
expand = expansion(mult = c(0, 0.15)), # Más espacio arriba para los labels
limits = c(0, NA)
) +
scale_x_discrete(
labels = c("1" = "Muy \n en desacuerdo",
"2" = "Ni en desacuerdo \n ni de acuerdo",
"3" = "Muy \n de acuerdo")
) +
theme_ggdist() +
theme(
# Estilo de los paneles
strip.text = element_text(size = 16, face = "bold"),
# Estilo de la leyenda
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background = element_rect(fill = "white", color = NA),
legend.margin = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin = margin(t = 6, r = 6, b = 6, l = 6),
legend.position = "top",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(size = 14),
legend.key = element_rect(fill = "white", color = NA),
legend.key.height = unit(12, "pt"),
legend.key.width = unit(20, "pt"),
# Estilo del texto
plot.title = element_text(size = 22, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 14),
axis.title.x = element_text(size = 18, margin = margin(t = 20)),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 18),
# Separación entre paneles
panel.spacing = unit(1, "cm")
) +
guides(fill = guide_legend(
title.position = "top",
label.position = "right",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
#| label: fig-seg-educ
#| fig-cap: Seguridad objetiva y desempleo debido a inmigrantes por nivel educacional
#| fig-cap-location: bottom
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
# Preparación de datos por educación
seguridad_educ <- elsoc_6_graph_2 %>%
select(educacion, seguridad_obj, desempleo_migrantes)
# Filtrar por nivel educacional
seguridad_titulo <- seguridad_educ %>%
filter(educacion == 1)
seguridad_notitulo <- seguridad_educ %>%
filter(educacion == 0)
# Remover la variable de agrupación
seguridad_titulo <- seguridad_titulo %>%
select(-c(educacion))
seguridad_notitulo <- seguridad_notitulo %>%
select(-c(educacion))
# Agregar columna identificadora y combinar datasets
seguridad_titulo$grupo <- "Con título univ."
seguridad_notitulo$grupo <- "Sin título univ."
datos_combinados <- rbind(seguridad_titulo, seguridad_notitulo)
# Primero calcular los porcentajes para mostrar en las barras
datos_porcentajes <- datos_combinados %>%
group_by(grupo, desempleo_migrantes, seguridad_obj) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(grupo, desempleo_migrantes) %>%
mutate(
total = sum(n),
porcentaje = (n / total) * 100,
seguridad_label = factor(seguridad_obj, labels = c("Alta seguridad", "Baja seguridad"))
)
# Crear el gráfico con barras agrupadas
ggplot(datos_porcentajes, aes(
x = factor(desempleo_migrantes),
y = porcentaje,
fill = seguridad_label
)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(
aes(label = paste0(round(porcentaje, 1), "%")),
position = position_dodge(width = 0.8),
vjust = -0.5,
size = 4,
fontface = "bold"
) +
facet_wrap(~grupo, ncol = 2) +
scale_fill_manual(
values = c("Alta seguridad" = "#2b2f3c", "Baja seguridad" = "#f9913d"),
breaks = c("Baja seguridad", "Alta seguridad"),
name = "Seguridad objetiva"
) +
labs(
title = "Percepción de Seguridad y desempleo inmigrantes",
x = "Percepción de desempleo debido a inmigrantes",
y = "Porcentaje",
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2022"
) +
theme_minimal() +
scale_y_continuous(
labels = scales::percent_format(accuracy = 1, scale = 1),
breaks = scales::pretty_breaks(n = 5),
expand = expansion(mult = c(0, 0.15)), # Más espacio arriba para los labels
limits = c(0, NA)
) +
scale_x_discrete(
labels = c("1" = "Muy \n en desacuerdo",
"2" = "Ni en desacuerdo \n ni de acuerdo",
"3" = "Muy \n de acuerdo")
) +
theme_ggdist() +
theme(
# Estilo de los paneles
strip.text = element_text(size = 16, face = "bold"),
# Estilo de la leyenda
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background = element_rect(fill = "white", color = NA),
legend.margin = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin = margin(t = 6, r = 6, b = 6, l = 6),
legend.position = "top",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(size = 14),
legend.key = element_rect(fill = "white", color = NA),
legend.key.height = unit(12, "pt"),
legend.key.width = unit(20, "pt"),
# Estilo del texto
plot.title = element_text(size = 22, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 14),
axis.title.x = element_text(size = 18, margin = margin(t = 20)),
axis.text.x = element_text(size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 18),
# Separación entre paneles
panel.spacing = unit(1, "cm")
) +
guides(fill = guide_legend(
title.position = "top",
label.position = "right",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| results: asis
#| label: fig-seg-iden-2
#| fig-cap-location: bottom
sel <- plots_tbl %>%
filter(out  %in% c("seguridad_sub","seguridad_obj"))
walk(sel[c(7), ]$plot, print)
sel <- plots_tbl %>%
filter(out  %in% c("seguridad_sub","seguridad_obj"))
sel$plot[[12]] +
labs(title = "Seguridad percibida y simpatía hacia migrantes")
#| label: fig-simpa-seg
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
sel <- plots_tbl %>%
filter(out  %in% c("seguridad_sub","seguridad_obj"))
sel$plot[[12]]
#| label: fig-seg-res-2
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
sel$plot[[10]]
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| results: asis
#| label: fig-seg-simpa
#| fig-cap-location: bottom
walk(sel[c(10), ]$plot, print)
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| results: asis
#| label: fig-seg-iden3
#| fig-cap-location: bottom
walk(sel[c(8), ]$plot, print)
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| results: asis
#| label: fig-seg-simpa
#| fig-cap-location: bottom
walk(sel[c(10), ]$plot, print)
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| results: asis
#| label: fig-seg-desemp
#| fig-cap-location: bottom
walk(sel[c(4), ]$plot, print)
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| results: asis
#| label: fig-seg-res
#| fig-cap-location: bottom
walk(sel[c(10), ]$plot, print)
#| label: fig-seg-res
#| fig-cap-location: bottom
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
db_pond %>%
select(wave, seguridad_sub, restriccion_migrantes) %>%
mutate(seguridad_sub = case_when(
seguridad_sub <= 2.5 ~ "Baja",
seguridad_sub >= 3   ~ "Alta"
),
restriccion_migrantes = forcats::fct_relabel(
restriccion_migrantes, ~ str_wrap(.x, 20))) %>%
tidyr::drop_na() %>%
filter(wave == last(wave)) %>%
group_by(restriccion_migrantes, seguridad_sub) %>%
survey_count(vartype = NULL) %>%
group_by(seguridad_sub) %>%
mutate(
prop  = 100 * n / sum(n),                 # porcentaje dentro de cada wave
label = scales::percent(prop/100, accuracy = 0.1)
) %>%
ggplot(aes(x = restriccion_migrantes, y = prop, fill = seguridad_sub)) +
geom_col(position = position_dodge(width = 0.6), width = 0.6) +
geom_text(
aes(label = label, color = seguridad_sub),   # color igual a la serie
position = position_dodge(width = 0.6),
vjust = -0.4, size = 5, fontface = "bold", show.legend = FALSE
) +
scale_fill_manual(
name = "Percepción seguridad",
values = c("Baja" = "#F9913D", "Alta" = "#2b2f3c")
) +
scale_color_manual(                                 # mismo esquema para el texto
values = c("Baja" = "#F9913D", "Alta" = "#2b2f3c")
) +
scale_y_continuous(
labels = function(p){paste0(p, "%")},
limits = c(0,100),
breaks = seq(0,100, by = 10),
expand = expansion(mult = c(0.02, 0.08)) # deja aire arriba para las etiquetas
)  +
labs(
title = "Percepción de seguridad y restricción de acceso a migrantes",
x = "Restricción de acceso a migrantes",
y = NULL,
caption = "Fuente: elaboración propia con datos de ELSOC 2023"
) +
theme_ggdist() +
theme(
plot.title   = element_text(size = 24, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "italic", hjust = 0.5),
plot.caption = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x  = element_text(size = 16),
axis.text.y  = element_text(size = 16),
legend.title = element_text(size = 16, face = "bold"),
legend.text  = element_text(size = 14),
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position  = "top",
legend.direction = "horizontal"
) +
guides(
color = guide_legend(
title.position = "top",
label.position = "right",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
)
)
#| label: fig-seg-iden-1
#| fig-cap-location: bottom
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
# Primero calcular los porcentajes para mostrar en las barras
datos_porcentajes <- elsoc_6_graph_2 %>%
group_by(perdida_identidad, seguridad_obj) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(perdida_identidad) %>%
mutate(
total = sum(n),
porcentaje = (n / total) * 100,
seguridad_label = factor(seguridad_obj, labels = c("Alta", "Baja"))
)
# Crear el gráfico con barras agrupadas
ggplot(datos_porcentajes, aes(
x = factor(perdida_identidad),
y = porcentaje,
fill = seguridad_label
)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(
aes(label = paste0(round(porcentaje, 1), "%")),
position = position_dodge(width = 0.8),
vjust = -0.5,
size = 5,
fontface = "bold"
) +
scale_fill_manual(
values = c("Alta seguridad" = "#2b2f3c", "Baja seguridad" = "#f9913d"),
breaks = c("Baja seguridad", "Alta seguridad"),
name = "Percepción de Seguridad"
) +
scale_color_manual(
values = c("Alta seguridad" = "#2b2f3c", "Baja seguridad" = "#f9913d"),
breaks = c("Baja seguridad", "Alta seguridad"),
guide = "none"
) +
labs(
title = "Percepción de Seguridad y Pérdida de Identidad",
x = "Percepción de pérdida de identidad",
y = "Porcentaje",
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2022"
) +
theme_minimal() +
scale_y_continuous(
labels = scales::percent_format(accuracy = 1, scale = 1),
breaks = scales::pretty_breaks(n = 5),
expand = expansion(mult = c(0, 0.15)), # Más espacio arriba para los labels
limits = c(0, NA)
) +
scale_x_discrete(
labels = c("1" = "Muy \n en desacuerdo",
"2" = "Ni en desacuerdo \n ni de acuerdo",
"3" = "Muy \n de acuerdo")
) +
theme_ggdist() +
theme(
plot.title   = element_text(size = 24, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "italic", hjust = 0.5),
plot.caption = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x  = element_text(size = 16),
axis.text.y  = element_text(size = 16),
legend.title = element_text(size = 16, face = "bold"),
legend.text  = element_text(size = 14),
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position  = "top",
legend.direction = "horizontal"
) +
guides(
color = guide_legend(
title.position = "top",
label.position = "right",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
)
)
#| label: fig-seg-iden-1
#| fig-cap-location: bottom
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
# Primero calcular los porcentajes para mostrar en las barras
datos_porcentajes <- elsoc_6_graph_2 %>%
group_by(perdida_identidad, seguridad_obj) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(perdida_identidad) %>%
mutate(
total = sum(n),
porcentaje = (n / total) * 100,
seguridad_label = factor(seguridad_obj, labels = c("Alta seguridad", "Baja seguridad"))
)
# Crear el gráfico con barras agrupadas
ggplot(datos_porcentajes, aes(
x = factor(perdida_identidad),
y = porcentaje,
fill = seguridad_label
)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(
aes(label = paste0(round(porcentaje, 1), "%")),
position = position_dodge(width = 0.8),
vjust = -0.5,
size = 5,
fontface = "bold"
) +
scale_fill_manual(
values = c("Alta seguridad" = "#2b2f3c", "Baja seguridad" = "#f9913d"),
breaks = c("Baja seguridad", "Alta seguridad"),
name = "Percepción de Seguridad"
) +
scale_color_manual(
values = c("Alta seguridad" = "#2b2f3c", "Baja seguridad" = "#f9913d"),
breaks = c("Baja seguridad", "Alta seguridad"),
guide = "none"
) +
labs(
title = "Percepción de Seguridad y Pérdida de Identidad",
x = "Percepción de pérdida de identidad",
y = "Porcentaje",
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2022"
) +
theme_minimal() +
scale_y_continuous(
labels = scales::percent_format(accuracy = 1, scale = 1),
breaks = scales::pretty_breaks(n = 5),
expand = expansion(mult = c(0, 0.15)), # Más espacio arriba para los labels
limits = c(0, NA)
) +
scale_x_discrete(
labels = c("1" = "Muy \n en desacuerdo",
"2" = "Ni en desacuerdo \n ni de acuerdo",
"3" = "Muy \n de acuerdo")
) +
theme_ggdist() +
theme(
plot.title   = element_text(size = 24, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "italic", hjust = 0.5),
plot.caption = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x  = element_text(size = 16),
axis.text.y  = element_text(size = 16),
legend.title = element_text(size = 16, face = "bold"),
legend.text  = element_text(size = 14),
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position  = "top",
legend.direction = "horizontal"
) +
guides(
color = guide_legend(
title.position = "top",
label.position = "right",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
)
)

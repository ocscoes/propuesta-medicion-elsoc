sentido_pertenencia > 3.5   ~ "Alta"
),
perdida_identidad2 = forcats::fct_relabel(
perdida_identidad2, ~ str_wrap(.x, 20))) %>%
tidyr::drop_na() %>%
filter(ola == last(ola)) %>%
group_by(perdida_identidad2, sentido_pertenencia) %>%
survey_count(vartype = NULL) %>%
group_by(sentido_pertenencia) %>%
mutate(
prop  = 100 * n / sum(n),                 # porcentaje dentro de cada ola
label = scales::percent(prop/100, accuracy = 0.1)
) %>%
ggplot(aes(x = perdida_identidad2, y = prop, fill = sentido_pertenencia)) +
geom_col(position = position_dodge(width = 0.6), width = 0.6) +
geom_text(
aes(label = label, color = sentido_pertenencia),   # color igual a la serie
position = position_dodge(width = 0.6),
vjust = -0.4, size = 5, fontface = "bold", show.legend = FALSE
) +
scale_fill_manual(
name = "Sentido de pertenencia",
values = c("Baja" = "#F9913D", "Alta" = "#2B2F3C")
) +
scale_color_manual(                                 # mismo esquema para el texto
values = c("Baja" = "#F9913D", "Alta" = "#2B2F3C")
) +
scale_y_continuous(
labels = function(p){paste0(p, "%")},
limits = c(0,100),
breaks = seq(0,100, by = 10),
expand = expansion(mult = c(0.02, 0.08)) # deja aire arriba para las etiquetas
)  +
labs(
x = "Pérdida de identidad debido a migrantes",
y = NULL,
caption = "Fuente: elaboración propia con datos de ELSOC 2023 \n Nota: Para el cálculo se excluye la categoría intermedia (Ni de acuerdo ni en desacuerdo)"
) +
theme_ggdist() +
theme(
plot.title   = element_text(size = 24, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "italic", hjust = 0.5),
plot.caption = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x  = element_text(size = 16),
axis.text.y  = element_text(size = 16),
legend.title = element_text(size = 16, face = "bold"),
legend.text  = element_text(size = 14),
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position  = "top",
legend.direction = "horizontal"
) +
guides(
color = guide_legend(
title.position = "top",
label.position = "right",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
)
)
#| label: db_pond
elsoc_7_pond <- elsoc_7 %>%
as_survey_design(ids = segmento,
strata = estrato,
weights = ponderador_long_total,
nest = T)
a <- elsoc_7_pond %>%
select(ola, sentido_pertenencia, perdida_identidad2) %>%
filter(perdida_identidad2!="Otro") %>%
mutate(sentido_pertenencia = case_when(
sentido_pertenencia <= 3.5 ~ "Baja",
sentido_pertenencia > 3.5   ~ "Alta"
),
perdida_identidad2 = forcats::fct_relabel(
perdida_identidad2, ~ str_wrap(.x, 20))) %>%
tidyr::drop_na() %>%
filter(ola == last(ola)) %>%
group_by(perdida_identidad2, sentido_pertenencia) %>%
survey_count(vartype = NULL) %>%
group_by(sentido_pertenencia) %>%
mutate(
prop  = 100 * n / sum(n),                 # porcentaje dentro de cada ola
label = scales::percent(prop/100, accuracy = 0.1)
) %>%
ggplot(aes(x = perdida_identidad2, y = prop, fill = sentido_pertenencia)) +
geom_col(position = position_dodge(width = 0.6), width = 0.6) +
geom_text(
aes(label = label, color = sentido_pertenencia),   # color igual a la serie
position = position_dodge(width = 0.6),
vjust = -0.4, size = 5, fontface = "bold", show.legend = FALSE
) +
scale_fill_manual(
name = "Sentido de pertenencia",
values = c("Baja" = "#F9913D", "Alta" = "#2B2F3C")
) +
scale_color_manual(                                 # mismo esquema para el texto
values = c("Baja" = "#F9913D", "Alta" = "#2B2F3C")
) +
scale_y_continuous(
labels = function(p){paste0(p, "%")},
limits = c(0,100),
breaks = seq(0,100, by = 10),
expand = expansion(mult = c(0.02, 0.08)) # deja aire arriba para las etiquetas
)  +
labs(
x = "Pérdida de identidad debido a migrantes",
y = NULL,
caption = "Fuente: elaboración propia con datos de ELSOC 2023 \n Nota: Para el cálculo se excluye la categoría intermedia (Ni de acuerdo ni en desacuerdo)"
) +
theme_ggdist() +
theme(
plot.title   = element_text(size = 24, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "italic", hjust = 0.5),
plot.caption = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x  = element_text(size = 16),
axis.text.y  = element_text(size = 16),
legend.title = element_text(size = 16, face = "bold"),
legend.text  = element_text(size = 14),
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position  = "top",
legend.direction = "horizontal"
) +
guides(
color = guide_legend(
title.position = "top",
label.position = "right",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
)
)
b <- elsoc_7_pond %>%
select(ola, satisfaccion_barrio, perdida_identidad2) %>%
filter(perdida_identidad2!="Otro") %>%
mutate(satisfaccion_barrio = case_when(
satisfaccion_barrio <= 3.5 ~ "Baja",
satisfaccion_barrio > 3.5   ~ "Alta"
),
perdida_identidad2 = forcats::fct_relabel(
perdida_identidad2, ~ str_wrap(.x, 20))) %>%
tidyr::drop_na() %>%
filter(ola == last(ola)) %>%
group_by(perdida_identidad2, satisfaccion_barrio) %>%
survey_count(vartype = NULL) %>%
group_by(satisfaccion_barrio) %>%
mutate(
prop  = 100 * n / sum(n),                 # porcentaje dentro de cada ola
label = scales::percent(prop/100, accuracy = 0.1)
) %>%
ggplot(aes(x = perdida_identidad2, y = prop, fill = satisfaccion_barrio)) +
geom_col(position = position_dodge(width = 0.6), width = 0.6) +
geom_text(
aes(label = label, color = satisfaccion_barrio),   # color igual a la serie
position = position_dodge(width = 0.6),
vjust = -0.4, size = 5, fontface = "bold", show.legend = FALSE
) +
scale_fill_manual(
name = "Satisfacción con el barrio",
values = c("Baja" = "#F9913D", "Alta" = "#2B2F3C")
) +
scale_color_manual(                                 # mismo esquema para el texto
values = c("Baja" = "#F9913D", "Alta" = "#2B2F3C")
) +
scale_y_continuous(
labels = function(p){paste0(p, "%")},
limits = c(0,100),
breaks = seq(0,100, by = 10),
expand = expansion(mult = c(0.02, 0.08)) # deja aire arriba para las etiquetas
)  +
labs(
x = "Pérdida de identidad debido a migrantes",
y = NULL,
caption = "Fuente: elaboración propia con datos de ELSOC 2023 \n Nota: Para el cálculo se excluye la categoría intermedia (Ni de acuerdo ni en desacuerdo)"
) +
theme_ggdist() +
theme(
plot.title   = element_text(size = 24, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "italic", hjust = 0.5),
plot.caption = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x  = element_text(size = 16),
axis.text.y  = element_text(size = 16),
legend.title = element_text(size = 16, face = "bold"),
legend.text  = element_text(size = 14),
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position  = "top",
legend.direction = "horizontal"
) +
guides(
color = guide_legend(
title.position = "top",
label.position = "right",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
)
)
b
ggsave(plot = last_plot(),
filename = "output/graph/nota/graph4.png",
device = "png",
dpi = "retina",
units = "cm",
width = 33,
height = 20)
ggsave(plot = last_plot(),
filename = "output/graph/nota/graph3.png",
device = "png",
dpi = "retina",
units = "cm",
width = 33,
height = 20)
# Chunk 1
#| echo: false
#| message: false
#| warning: false
# Set workspace
library(knitr)
knitr::opts_chunk$set(echo = TRUE,
include = TRUE,
warning = FALSE,
message = FALSE)
table_format <- if(is_html_output()) {
"html"
} else if(is_latex_output()) {
"latex"
}
table_format2 <- if(is_html_output()) {
T
} else if(is_latex_output()) {
F
}
options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
if (! require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse,
sjmisc,
here,
sjlabelled,
srvyr,
ggdist
)
options(scipen=999)
rm(list = ls())
# Chunk 2
load(here('input/data/raw_data/elsoc.RData'))
elsoc_long <- elsoc_long_2016_2023 # acortar
missing_codes <- c(-999, -888, -777, -666)
elsoc_long <- elsoc_long %>%
mutate(across(everything(), ~ sjlabelled::set_na(.x, na = missing_codes)))
# Chunk 3
#| results: false
find_var(data = elsoc_long,"presto") # corresponde a c07_06
frq(elsoc_long$c07_06)
find_var(data = elsoc_long,"trabajo") # corresponde a c07_08
frq(elsoc_long$c07_08)
# Chunk 4
#| results: false
find_var(data = elsoc_long,"desem") # corresponde a r12_04
frq(elsoc_long$r12_04)
# Chunk 5
check3 <- elsoc_long %>%
select(c07_06, c07_08, ola, r12_04)
# cheq
frq(check3$r12_04) # ok
# Chunk 6
check3$ayu_eco <- rowMeans(check3[,c("c07_06","c07_08")], na.rm = TRUE)
slice(check3,1:10) %>% select(c07_06, c07_08, ayu_eco, ola) # check ok
# Chunk 7
frq(check3$ayu_eco) # ok
# Chunk 8
frq(check3$ola) # ok
# Chunk 9
# Tabla con el promedio de seguridad subjetiva por ola
ayuda_por_ola <- check3 %>%
group_by(ola) %>%
summarise(promedio_ayuda_economica = mean(ayu_eco, na.rm = TRUE))
if (!exists("table_format")) table_format <- "simple"
knitr::kable(ayuda_por_ola, format = table_format, caption = "Promedio de Ayuda Económica por ola")
# Chunk 10
# Tabla con el promedio de Ayuda Económica por ola y por categorías de r12_04 (desempleo migrantes)
ayuda_por_ola_desempleo <- check3 %>%
group_by(ola, r12_04) %>%
summarise(promedio_ayuda_economica = mean(ayu_eco, na.rm = TRUE), n = n()) %>%
ungroup()
knitr::kable(ayuda_por_ola_desempleo, format = table_format, caption = "Promedio de Ayuda Económica por ola y categoría de migración (r12_04)")
# Chunk 11
# Tabla ordenada por r12_04
ayuda_por_ola_desempleo_ordered <- ayuda_por_ola_desempleo %>%
arrange(r12_04, ola)
knitr::kable(ayuda_por_ola_desempleo_ordered, format = table_format, caption = "Promedio de ayuda económica por ola y categoría de migración (r12_04) - Ordenado por r12_04")
# Chunk 12
"Recodificar índice de ayuda económica en bajo y alto"
check3 <- check3 %>%
mutate(ayu_eco3 = case_when(
ayu_eco >= 1 & ayu_eco <= 2 ~ "Bajo",
ayu_eco > 2 & ayu_eco <= 3 ~ "Alto",
TRUE ~ NA_character_
))
frq(check3$ayu_eco3) # ok
# Chunk 13
#reordenar alto, medio, bajo
check3$ayu_eco3 <- factor(check3$ayu_eco3, levels = c("Alto", "Bajo"))
frq(check3$ayu_eco3) # ok
# Chunk 14
# recodificar r12_04 (desempleo migrantes) en muy de acuerdo = 1, el resto=0, sacando los NAs
check3 <- check3 %>%
mutate(desempleo_migrantes5 = case_when(
r12_04 == 5 ~ "Muy de acuerdo",
r12_04 %in% c(1, 2, 3, 4) ~ "Otro",
TRUE ~ NA_character_
))
frq(check3$desempleo_migrantes5) # ok
# Chunk 15
# recodificar c37_05 (restriccion migrantes) en muy en desacuerdo = 1, el resto=0, sacando los NAs
check3 <- check3 %>%
mutate(desempleo_migrantes1 = case_when(
r12_04 == 1 ~ "Muy en desacuerdo",
r12_04 %in% c(2, 3, 4,5) ~ "Otro",
TRUE ~ NA_character_
))
frq(check3$desempleo_migrantes1) # ok
# Chunk 16
#recodificar ayuda económica en baja y alta
check3 <- check3 %>%
mutate(ayu_eco2 = case_when(
ayu_eco >= 1 & ayu_eco <= 2 ~ "Baja",
ayu_eco > 2 & ayu_eco <= 3 ~ "Alta",
TRUE ~ NA_character_
))
check3$ayu_eco2 <- factor(check3$ayu_eco2, levels = c("Alta", "Baja"))
frq(check3$ayu_eco2)
# Chunk 17
tabla_cruzada <- check3 %>%
filter(!is.na(ayu_eco3) & !is.na(desempleo_migrantes5) & desempleo_migrantes5 == "Muy de acuerdo") %>%
group_by(ola, ayu_eco3) %>%
summarise(n = n()) %>%
group_by(ola) %>%
mutate(total_ola = sum(n),
porcentaje = (n / total_ola) * 100) %>%
ungroup()
knitr::kable(tabla_cruzada, format = table_format, caption = "Tabla cruzada de ayuda económica y desempleo migrantes (Muy de acuerdo) por ola - porcentaje dentro de ola")
# Chunk 18
tabla_cruzada2 <- check3 %>%
filter(!is.na(ayu_eco3) & !is.na(desempleo_migrantes1) & desempleo_migrantes1 == "Muy en desacuerdo") %>%
group_by(ola, ayu_eco3) %>%
summarise(n = n()) %>%
group_by(ola) %>%
mutate(total_ola = sum(n),
porcentaje = (n / total_ola) * 100) %>%
ungroup()
knitr::kable(tabla_cruzada, format = table_format, caption = "Tabla cruzada de ayuda económica y desempleo migrantes (Muy en desacuerdo) por ola - porcentaje dentro de ola")
# Chunk 19
frq(check3$desempleo_migrantes1) # ok
# Chunk 20
#recodificar algo de acuerdo = 4 y muy de acuerdo = 5 como "De acuerdo", 3= "ni de acuerdo ni desacuerdo", y 1 y 2 como "en desacuerdo, sacando los NAs
elsoc_long <- elsoc_long %>%
mutate(desempleo_migrantes = case_when(
r12_04 %in% c(1, 2) ~ "Totalmente en desacuerdo + en desacuerdo",
r12_04 == 3 ~ "Ni de acuerdo ni en desacuerdo",
r12_04 %in% c(4, 5) ~ "Totalmente de acuerdo + de acuerdo",
TRUE ~ NA_character_
))
# order from  "En desacuerdo", "Ni de acuerdo ni en desacuerdo", "De acuerdo"
elsoc_long$desempleo_migrantes <- factor(elsoc_long$desempleo_migrantes, levels = c("Totalmente en desacuerdo + en desacuerdo", "Ni de acuerdo ni en desacuerdo", "Totalmente de acuerdo + de acuerdo"))
frq(elsoc_long$desempleo_migrantes) # ok
# Chunk 21
# generar indice promedio de apoyo económico con c07_06 y c07_08
elsoc_long <- elsoc_long %>%
mutate(ayu_eco = rowMeans(select(., c07_06, c07_08), na.rm = TRUE))
frq(elsoc_long$ayu_eco) # ok
# Chunk 22
check4 <- elsoc_long %>%
select(ola, ayu_eco, desempleo_migrantes, estrato, segmento, ponderador_long_total)
# cheq
frq(check4$desempleo_migrantes) # ok
# Chunk 23
check4 <- check4 %>%
mutate(ayu_eco2 = case_when(
ayu_eco >= 1 & ayu_eco <= 2 ~ "Baja",
ayu_eco > 2 & ayu_eco <= 3 ~ "Alta",
TRUE ~ NA_character_
))
check4$ayu_eco2 <- factor(check4$ayu_eco2, levels = c("Alta", "Baja"))
frq(check4$ayu_eco2)
# Chunk 24
tabla_cruzada_desempleo <- check4 %>%
filter(ola == 7 & !is.na(ayu_eco2) & !is.na(desempleo_migrantes)) %>%
group_by(ayu_eco2, desempleo_migrantes) %>%
summarise(n = n()) %>%
mutate(total = sum(n),
porcentaje = (n / total) * 100) %>%
ungroup()
knitr::kable(tabla_cruzada_desempleo, format = table_format, caption = "Tabla cruzada de ayuda económica y desempleo por migrantes - ola 2023")
# Chunk 25
# ahora hacer tabla pero tomando como 100% cada nivel de respuestas a desempleo migrantes, con variable ayu_eco2
tabla_cruzada_desempleo2 <- check4 %>%
filter(ola == 7 & !is.na(ayu_eco2) & !is.na(desempleo_migrantes)) %>%
group_by(ayu_eco2, desempleo_migrantes) %>%
summarise(n = n()) %>%
group_by(desempleo_migrantes) %>%
mutate(total = sum(n),
porcentaje = (n / total) * 100) %>%
ungroup()
knitr::kable(tabla_cruzada_desempleo, format = table_format, caption = "Tabla cruzada de ayuda económica y desempleo por migrantes - ola 2023 - porcentaje sobre total de cada nivel de desempleo por migrantes")
# Chunk 26: fig-1
#| label: fig-1
#| fig-cap-location: bottom
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 8
#| out-width: "100%"
#| fig-align: "center"
check4 <- check4 %>%
as_survey_design(ids = segmento,
strata = estrato,
weights = ponderador_long_total,
nest = T)
check4 %>%
select(ola, ayu_eco, desempleo_migrantes) %>%
# FILTRAR PRIMERO: quitar la categoría intermedia ANTES de cualquier cálculo
filter(desempleo_migrantes != "Ni de acuerdo ni en desacuerdo") %>%  # ajusta el nombre exacto
mutate(ayu_eco = case_when(
ayu_eco >= 1 & ayu_eco <= 2 ~ "Baja",
ayu_eco >2 & ayu_eco <= 3 ~ "Alta"
),
desempleo_migrantes = forcats::fct_relabel(
desempleo_migrantes, ~ str_wrap(.x, 20))) %>%
tidyr::drop_na() %>%
filter(ola == last(ola)) %>%
group_by(desempleo_migrantes, ayu_eco) %>%
survey_count(vartype = NULL) %>%
group_by(ayu_eco) %>%
mutate(
prop  = 100 * n / sum(n),                 # porcentaje dentro de cada nivel de seguridad
label = scales::percent(prop/100, accuracy = 0.1)
) %>%
ggplot(aes(x = desempleo_migrantes, y = prop, fill = ayu_eco)) +
geom_col(position = position_dodge(width = 0.6), width = 0.6) +
geom_text(
aes(label = label, color = ayu_eco),
position = position_dodge(width = 0.6),
vjust = -0.4, size = 5, fontface = "bold", show.legend = FALSE
) +
scale_fill_manual(
name = "Ayuda económica",
values = c("Alta" = "#2b2f3c", "Baja" = "#F9913D")
) +
scale_color_manual(
values = c("Alta" = "#2b2f3c", "Baja" = "#F9913D")
) +
scale_y_continuous(
labels = function(p){paste0(p, "%")},
limits = c(0,100),
breaks = seq(0,100, by = 10),
expand = expansion(mult = c(0.02, 0.08))
)  +
labs(
x = "Desempleo a causa de migrantes",
y = NULL,
caption = "Fuente: elaboración propia con datos de ELSOC 2023 \n Nota: Para el cálculo se excluye la categoría intermedia (Ni de acuerdo ni en desacuerdo)"
) +
theme_ggdist() +
theme(
plot.title   = element_text(size = 24, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "italic", hjust = 0.5),
plot.caption = element_text(size = 14),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x  = element_text(size = 16),
axis.text.y  = element_text(size = 16),
legend.title = element_text(size = 16, face = "bold"),
legend.text  = element_text(size = 14),
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position  = "top",
legend.direction = "horizontal"
) +
guides(
color = guide_legend(
title.position = "top",
label.position = "right",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
)
)
ggsave(plot = last_plot(),
filename = "output/graph/nota/graph4.png",
device = "png",
dpi = "retina",
units = "cm",
width = 33,
height = 20)

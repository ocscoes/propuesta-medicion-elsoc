data$asaltos <- recode(data$asaltos, "c(-666, -777, -888, -999) = NA")
data$trafico_drogas <- recode(data$trafico_drogas, "c(-666, -777, -888, -999) = NA")
data$confianza_gen <- recode(data$confianza_gen, "c(-666, -777, -888, -999) = NA")
data$altruismo_gen <- recode(data$altruismo_gen, "c(-666, -777, -888, -999) = NA")
data$gente_justa <- recode(data$gente_justa, "c(-666, -777, -888, -999) = NA")
data$visitar_vecino <- recode(data$visitar_vecino, "c(-666, -777, -888, -999) = NA")
data$reunion_pub <- recode(data$reunion_pub, "c(-666, -777, -888, -999) = NA")
data$visita_amigos <- recode(data$visita_amigos, "c(-666, -777, -888, -999) = NA")
data$voluntariado <- recode(data$voluntariado, "c(-666, -777, -888, -999) = NA")
data$donar_dinero <- recode(data$donar_dinero, "c(-666, -777, -888, -999) = NA")
data$prestar_dinero <- recode(data$prestar_dinero, "c(-666, -777, -888, -999) = NA")
data$confianza_vecinos <- recode(data$confianza_vecinos, "c(-666, -777, -888, -999) = NA")
data$barrio_ideal <- recode(data$barrio_ideal, "c(-666, -777, -888, -999) = NA")
data$barrio_integracion <- recode(data$barrio_integracion, "c(-666, -777, -888, -999) = NA")
data$barrio_identidad <- recode(data$barrio_identidad, "c(-666, -777, -888, -999) = NA")
data$barrio_pertenencia <- recode(data$barrio_pertenencia, "c(-666, -777, -888, -999) = NA")
data$barrio_amigos <- recode(data$barrio_amigos, "c(-666, -777, -888, -999) = NA")
data$barrio_sociable <- recode(data$barrio_sociable, "c(-666, -777, -888, -999) = NA")
data$barrio_cordial <- recode(data$barrio_cordial, "c(-666, -777, -888, -999) = NA")
data$barrio_colaborador <- recode(data$barrio_colaborador, "c(-666, -777, -888, -999) = NA")
data$barrio_limpio <- recode(data$barrio_limpio, "c(-666, -777, -888, -999) = NA")
data$conectividad <- recode(data$conectividad, "c(-666, -777, -888, -999) = NA")
data$areas_verdes <- recode(data$areas_verdes, "c(-666, -777, -888, -999) = NA")
data$cercania_actividad <- recode(data$cercania_actividad, "c(-666, -777, -888, -999) = NA")
data$cercania_comercio <- recode(data$cercania_comercio, "c(-666, -777, -888, -999) = NA")
data$cercania_escuelas <- recode(data$cercania_escuelas, "c(-666, -777, -888, -999) = NA")
data$cercania_familia <- recode(data$cercania_familia, "c(-666, -777, -888, -999) = NA")
data$tamaño_vivienda <- recode(data$tamaño_vivienda, "c(-666, -777, -888, -999) = NA")
data$calidad_vivienda <- recode(data$calidad_vivienda, "c(-666, -777, -888, -999) = NA")
View(data)
get_labels(data$sexo, values = TRUE)
data$sexo <- recode(data$sexo, "c(1) = 0; c(2) = 1")
View(data)
data <- as.data.frame(data)
saveRDS(data, filr = "../input/data/proc_data/elsoc2022.RData")
saveRDS(data, file = "../input/data/proc_data/elsoc2022.RData")
load("../input/data/proc_data/elsoc2022.RData")
View(data)
load('../input/data/raw_data/elsoc.RData')
data <- elsoc_long_2016_2023
rm(elsoc_long_2016_2023)
# seleccionar solo ola 2022
data <- data %>%
filter(ola==6)
data <- data %>%
select(idencuesta, m0_sexo, m0_edad, comuna, comuna_cod, region, region_cod,
t06_01, t10, t09_01, t09_02, t09_03,
c02, c03, c04, c07_01, c07_02, c07_03, c07_04, c07_05, c07_06, c07_07,
t01, t02_01, t02_02, t02_03, t02_04, t03_01, t03_02, t03_03, t03_04,
t06_01, t06_02, t06_03, t06_04, t06_05, t06_06, t06_07, t06_08,
t07_01, t07_02)
#cambiar nombre a variables
data <- data %>%
rename(sexo = m0_sexo, edad = m0_edad, seguridad_sat = t06_01,
seguridad_perc = t10, peleas_calle = t09_01,
asaltos = t09_02, trafico_drogas = t09_03, confianza_gen = c02,
altruismo_gen = c03, gente_justa = c04, visitar_vecino = c07_01,
reunion_pub = c07_02, visita_amigos = c07_03, voluntariado = c07_04,
donar_dinero = c07_05, prestar_dinero = c07_06,
confianza_vecinos = t01, barrio_ideal = t02_01,
barrio_integracion = t02_02, barrio_identidad = t02_03,
barrio_pertenencia = t02_04, barrio_amigos = t03_01,
barrio_sociable = t03_02, barrio_cordial = t03_03,
barrio_colaborador = t03_04, conectividad = t06_02,
areas_verdes = t06_03, barrio_limpio = t06_04,
cercania_actividad = t06_05, cercania_escuelas = t06_06,
cercania_comercio = t06_07, cercania_familia = t06_08,
tamaño_vivienda = t07_01, calidad_vivienda = t07_02)
#revisar los labels y los values para segurarnos
#de que están codificadas correctamente
get_labels(data$seguridad_sat, values = TRUE)
get_labels(data$seguridad_perc, values = TRUE)
get_labels(data$barrio_ideal, values = TRUE)
get_labels(data$calidad_vivienda, values = TRUE)
get_labels(data$confianza_gen, values = TRUE)
get_labels(data$voluntariado, values = TRUE)
#Recodificar NA
data$seguridad_sat <- recode(data$seguridad_sat, "c(-666, -777, -888, -999) = NA")
data$seguridad_perc <- recode(data$seguridad_perc, "c(-666, -777, -888, -999) = NA")
data$peleas_calle <- recode(data$peleas_calle, "c(-666, -777, -888, -999) = NA")
data$asaltos <- recode(data$asaltos, "c(-666, -777, -888, -999) = NA")
data$trafico_drogas <- recode(data$trafico_drogas, "c(-666, -777, -888, -999) = NA")
data$confianza_gen <- recode(data$confianza_gen, "c(-666, -777, -888, -999) = NA")
data$altruismo_gen <- recode(data$altruismo_gen, "c(-666, -777, -888, -999) = NA")
data$gente_justa <- recode(data$gente_justa, "c(-666, -777, -888, -999) = NA")
data$visitar_vecino <- recode(data$visitar_vecino, "c(-666, -777, -888, -999) = NA")
data$reunion_pub <- recode(data$reunion_pub, "c(-666, -777, -888, -999) = NA")
data$visita_amigos <- recode(data$visita_amigos, "c(-666, -777, -888, -999) = NA")
data$voluntariado <- recode(data$voluntariado, "c(-666, -777, -888, -999) = NA")
data$donar_dinero <- recode(data$donar_dinero, "c(-666, -777, -888, -999) = NA")
data$prestar_dinero <- recode(data$prestar_dinero, "c(-666, -777, -888, -999) = NA")
data$confianza_vecinos <- recode(data$confianza_vecinos, "c(-666, -777, -888, -999) = NA")
data$barrio_ideal <- recode(data$barrio_ideal, "c(-666, -777, -888, -999) = NA")
data$barrio_integracion <- recode(data$barrio_integracion, "c(-666, -777, -888, -999) = NA")
data$barrio_identidad <- recode(data$barrio_identidad, "c(-666, -777, -888, -999) = NA")
data$barrio_pertenencia <- recode(data$barrio_pertenencia, "c(-666, -777, -888, -999) = NA")
data$barrio_amigos <- recode(data$barrio_amigos, "c(-666, -777, -888, -999) = NA")
data$barrio_sociable <- recode(data$barrio_sociable, "c(-666, -777, -888, -999) = NA")
data$barrio_cordial <- recode(data$barrio_cordial, "c(-666, -777, -888, -999) = NA")
data$barrio_colaborador <- recode(data$barrio_colaborador, "c(-666, -777, -888, -999) = NA")
data$barrio_limpio <- recode(data$barrio_limpio, "c(-666, -777, -888, -999) = NA")
data$conectividad <- recode(data$conectividad, "c(-666, -777, -888, -999) = NA")
data$areas_verdes <- recode(data$areas_verdes, "c(-666, -777, -888, -999) = NA")
data$cercania_actividad <- recode(data$cercania_actividad, "c(-666, -777, -888, -999) = NA")
data$cercania_comercio <- recode(data$cercania_comercio, "c(-666, -777, -888, -999) = NA")
data$cercania_escuelas <- recode(data$cercania_escuelas, "c(-666, -777, -888, -999) = NA")
data$cercania_familia <- recode(data$cercania_familia, "c(-666, -777, -888, -999) = NA")
data$tamaño_vivienda <- recode(data$tamaño_vivienda, "c(-666, -777, -888, -999) = NA")
data$calidad_vivienda <- recode(data$calidad_vivienda, "c(-666, -777, -888, -999) = NA")
data$sexo <- recode(data$sexo, "c(1) = 0; c(2) = 1")
saveRDS(data, file = "../input/data/proc_data/elsoc_2022.RData")
pacman::load(corr, lavaan, Hmisc, psych, psy, nFactors,
GPArotation, devtools, ggrepel)
pacman::p_load(corr, lavaan, Hmisc, psych, psy, nFactors,
GPArotation, devtools, ggrepel)
pacman::p_load(corrplot, lavaan, Hmisc, psych, psy, nFactors,
GPArotation, devtools, ggrepel)
load(../input/data/proc_data/elsoc_2022.RData)
load("../input/data/proc_data/elsoc_2022.RData")
load("../input/data/proc_data/elsoc_2022.RData")
elsoc <- readRDS("../input/data/proc_data/elsoc_2022.RData")
View(elsoc)
#| label: base con indicadores necesarios
elsoc_seg <- elsoc %>%
select(seguridad_sat, seguridad_perc, peleas_calle, asaltos, trafico_drogas)
corrseg <- round(cor(elsoc_seg), 2)
corrseg
elsoc_seg <- elsoc %>%
select(seguridad_sat, seguridad_perc, peleas_calle, asaltos, trafico_drogas) %>%
mutate(across(everything(), as.numeric))
corrseg <- round(cor(elsoc_seg), 2)
corrseg
corrseg <- round(cor(elsoc_seg, use = "pairwise.complete.obs"), 2)
corrseg
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("white", "red"))(200),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,            # rotar etiquetas
number.cex = 0.8        # tamaño números
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("white", "#4d27f5"))(10),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,            # rotar etiquetas
number.cex = 0.8        # tamaño números
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#4d27f5", "white", "#4d27f5"))(10),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,            # rotar etiquetas
number.cex = 0.8        # tamaño números
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#4d27f5", "white", "#f5f527"))(10),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,            # rotar etiquetas
number.cex = 0.8        # tamaño números
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#4d27f5", "white", "#f5f527"))(10),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,            # rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#4d27f5", "white", "#f5f527"))(10),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,            # rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
colores <- colorRampPalette(c("#4d27f5", "white", "#f5f527"))(12)
# Crear los breaks para que -1 sea azul intenso y 1 amarillo intenso
breaks <- seq(-1, 1, length.out = 201)  # 200 intervalos
corrplot(corrseg,
method = "color",
col = colores,
type = "upper",
order = "original",
addCoef.col = "black",
tl.col = "black",
tl.srt = 45,
number.cex = 0.8,
breaks = breaks
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#4d27f5", "white", "#f5f527"))(10),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = white,# rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#4d27f5", "white", "#f5f527"))(10),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#2761f5", "white", "#2761f5"))(10),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#2761f5", "white", "#2761f5"))(20),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#f56c27", "white", "#2761f5"))(20),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#f56c27", "white", "#2761f5"))(16),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#f56c27", "white", "#2761f5"))(20),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
elsoc <- readRDS("../input/data/proc_data/elsoc_2022.RData")
elsoc_seg <- elsoc %>%
select(seguridad_sat, seguridad_perc, peleas_calle, asaltos, trafico_drogas)
elsoc_seg <- elsoc %>%
select(seguridad_sat, seguridad_perc, peleas_calle, asaltos, trafico_drogas) %>%
mutate(across(everything(), as.numeric))
#| echo: false
corrseg <- round(cor(elsoc_seg, use = "pairwise.complete.obs"), 2)
corrseg
#| label: fig-corr-seg
#| fig-cap: Correlaciones factor seguridad
#| fig-cap-location: bottom
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#f56c27", "white", "#2761f5"))(20),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
#| label: fig-corr-seg
#| fig-cap: Correlaciones factor seguridad
#| fig-cap-location: bottom
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#2761f5", "white", "#f56c27"))(20),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8,
cl.lim = c(-1, 1)
)
#| label: fig-corr-seg
#| fig-cap: Correlaciones factor seguridad
#| fig-cap-location: bottom
corrplot(corrseg,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#2761f5", "white", "#f56c27"))(20),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8
)
pacman::p_load(corrplot, lavaan, Hmisc, psych, psy, nFactors,
GPArotation, devtools, ggrepel, dplyr)
KMO(corrseg)
cortest.bartlett(corMat, n = 300)
KMO(corrseg)
cortest.bartlett(corrseg, n = 300)
KMO(corrseg)
cortest.bartlett(corrseg, n = 2730)
tab_fa(elsoc_seg, rotation = "varimax", show.comm = TRUE)
pacman::p_load(corrplot, lavaan, Hmisc, psych, psy, nFactors,
GPArotation, devtools, ggrepel, dplyr, xtable)
tab_fa(elsoc_seg, rotation = "varimax", show.comm = TRUE)
pacman::p_load(corrplot, lavaan, Hmisc, psych, psy, nFactors,
GPArotation, devtools, ggrepel, dplyr, sjPlot)
tab_fa(elsoc_seg, rotation = "varimax", show.comm = TRUE)
elsoc_barrio <- elsoc %>%
select(confianza_vecinos, barrio_ideal, barrio_integracion, barrio_identidad,
barrio_pertenencia, barrio_amigos, barrio_sociable, barrio_cordial,
barrio_colaborador, conectividad, areas_verdes, barrio_limpio,
cercania_actividad, cercania_escuelas, cercania_comercio,
cercania_familia, tamaño_vivienda, calidad_vivienda)
elsoc_barrio <- elsoc %>%
select(confianza_vecinos, barrio_ideal, barrio_integracion, barrio_identidad,
barrio_pertenencia, barrio_amigos, barrio_sociable, barrio_cordial,
barrio_colaborador, conectividad, areas_verdes, barrio_limpio,
cercania_actividad, cercania_escuelas, cercania_comercio,
cercania_familia, tamaño_vivienda, calidad_vivienda) %>%
mutate(across(everything(), as.numeric))
corrbarrio <- round(cor(elsoc_barrio, use = "pairwise.complete.obs"), 2)
corrbarrio
#| label: fig-corr-seg
#| fig-cap: Correlaciones factor seguridad
#| fig-cap-location: bottom
corrplot(corrbarrio,
method = "color",       # colorea los recuadros según valor
col = colorRampPalette(c("#2761f5", "white", "#f56c27"))(20),  # blanco a rojo
type = "upper",         # mostrar solo la mitad superior
order = "original",     # mantener el orden de las variables
addCoef.col = "black",  # añadir los valores numéricos
tl.col = "black",       # color etiquetas
tl.srt = 45,
bg = "white",# rotar etiquetas
number.cex = 0.8
)
KMO(corrbarrio)
cortest.bartlett(corrbarrio, n = 2730)
tab_fa(elsoc_barrio, rotation = "varimax", show.comm = TRUE)
View(elsoc)
elsoc_redes <- elsoc %>%
select(confianza_gen, altruismo_gen, gente_justa, visitar_vecino,
reunion_pub, visita_amigos, voluntariado, donar_dinero, prestar_dinero)
elsoc_redes <- elsoc %>%
select(confianza_gen, altruismo_gen, gente_justa, visitar_vecino,
reunion_pub, visita_amigos, voluntariado, donar_dinero,
prestar_dinero) %>%
mutate(across(everything(), as.numeric))
corredes <- round(cor(elsoc_redes, use = "pairwise.complete.obs"), 2)
corredes
elsoc_redes <- elsoc %>%
select(confianza_gen, altruismo_gen, gente_justa, visitar_vecino,
reunion_pub, visita_amigos, voluntariado, donar_dinero,
prestar_dinero) %>%
mutate(across(everything(), as.numeric))
elsoc_redes <- elsoc %>%
select(confianza_gen, altruismo_gen, gente_justa, visitar_vecino,
reunion_pub, visita_amigos, voluntariado, donar_dinero,
prestar_dinero) %>%
mutate(across(everything(), as.numeric))
corredes <- round(cor(elsoc_redes, use = "pairwise.complete.obs"), 2)
corredes
View(elsoc)
library(knitr)
knitr::opts_chunk$set(echo = FALSE,
include = TRUE,
warning = FALSE,
message = FALSE)
table_format <- if(is_html_output()) {
"html"
} else if(is_latex_output()) {
"latex"
}
table_format2 <- if(is_html_output()) {
T
} else if(is_latex_output()) {
F
}
options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
if (! require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse,
sjmisc,
here,
sjlabelled
)
pacman::p_load(tidyverse,
sjmisc,
here,
sjlabelled
)
options(scipen=999)
rm(list = ls())
## Data
Call original dataset
load('input/data/raw_data/elsoc.RData')
setwd("~/Dropbox/github/github-organizations/ocscoes/propuesta-medicion-elsoc")
load('input/data/raw_data/elsoc.RData')
load(here('input/data/raw_data/elsoc.RData'))
head(elsoc_long_2016_2023)
elsoc_long <- elsoc_long_2016_2023 # acortar
find_var(data = elsoc_long,"peleas") # corresponde a t09_01
frq(elsoc_long$t09_01)
find_var(data = elsoc_long,"asaltos") # corresponde a t09_02
frq(elsoc_long$t09_02)
find_var(data = elsoc_long,"peleas") # corresponde a t09_01
frq(elsoc_long$t09_01)
find_var(data = elsoc_long,"asaltos") # corresponde a t09_02
frq(elsoc_long$t09_02)
## migración
```{r}
find_var(data = elsoc_long,"restri") # corresponde a c37_05
frq(elsoc_long$c37_05)
# Recodificar -999, -888, -777 , -666 a NA
missing_codes <- c(-999, -888, -777, -666)
elsoc_long <- elsoc_long %>%
mutate(across(everything(), ~ ifelse(. %in% missing_codes, NA, .)))
elsoc_long <- elsoc_long %>%
mutate(across(everything(), ~ ifelse(. %in% missing_codes, NA, .)))
# cheq
frq(elsoc_long$c37_05) # ok
elsoc_long$seg_obj <- rowMeans(elsoc_long[,c("t09_01","t09_02")], na.rm = TRUE)
slice(elsoc_long,1:10) %>% select(t09_01,t09_02,seg_obj) # check ok
frq(elsoc_long$ola) # ok
# Tabla con el promedio de seguridad objetiva por ola
seguridad_por_ola <- elsoc_long %>%
group_by(ola) %>%
summarise(promedio_seguridad_objetiva = mean(seg_obj, na.rm = TRUE))
knitr::kable(seguridad_por_ola, format = table_format, caption = "Promedio de seguridad objetiva por ola")
# Si table_format no está definido, usar "simple" como valor por defecto
if (!exists("table_format")) table_format <- "simple"
knitr::kable(seguridad_por_ola, format = table_format, caption = "Promedio de seguridad objetiva por ola")
# Si table_format no está definido, usar "simple" como valor por defecto
if (!exists("table_format")) table_format <- "simple"
knitr::kable(seguridad_por_ola, format = table_format, caption = "Promedio de seguridad objetiva por ola")
seguridad_por_ola_migracion <- elsoc_long %>%
group_by(ola, c37_05) %>%
summarise(promedio_seguridad_objetiva = mean(seg_obj, na.rm = TRUE), n = n()) %>%
ungroup()
knitr::kable(seguridad_por_ola_migracion, format = table_format, caption = "Promedio de seguridad objetiva por ola y categoría de migración (c37_05)")
# Tabla ordenada por c37_05
seguridad_por_ola_migracion_ordered <- seguridad_por_ola_migracion %>%
arrange(c37_05, ola)
knitr::kable(seguridad_por_ola_migracion_ordered, format = table_format, caption = "Promedio de seguridad objetiva por ola y categoría de migración (c37_05) - Ordenado por c37_05")
# Gráfico de líneas con ggplot2
library(ggplot2)
plot1 <- ggplot(seguridad_por_ola_migracion, aes(x = ola, y = promedio_seguridad_objetiva, color = as.factor(c37_05), group = c37_05)) +
geom_line() +
geom_point() +
labs(title = "Promedio de Seguridad Objetiva por Ola y Categoría de Migración",
x = "Ola",
y = "Promedio de Seguridad Objetiva",
color = "Categoría de Migración (c37_05)") +
theme_minimal() +
scale_color_brewer(palette = "Set1") +
theme(legend.position = "bottom")
plot1

elsoc_3 <- elsoc_3 %>% mutate(ola = 3)
elsoc_4 <- elsoc_4 %>% mutate(ola = 4)
# Unir todas las olas en una sola base
elsoc_long <- bind_rows(elsoc_1, elsoc_2, elsoc_3, elsoc_4)
#| label: desc-mig
#| echo: false
# Variables a graficar
vars <- c("frecuencia_migrantes", "contacto_migrantes", "simpatia_migrantes", "perdida_identidad", "desempleo_migrantes")
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"frecuencia_migrantes" = "Frecuencia de Contacto con migrantes",
"contacto_migrantes" = "Contacto Positivo con Migrantes",
"simpatia_migrantes" = "Simpatía hacia migrantes",
"perdida_identidad" = "Pérdida de identidad",
"desempleo_migrantes" = "Desempleo percibido por migrantes"
)
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"frecuencia_migrantes" = "#1b9e77",
"contacto_migrantes" = "#d95f02",
"simpatia_migrantes" = "#7570b3",
"perdida_identidad" = "#e7298a",
"desempleo_migrantes" = "#66a61e"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
View(long_promedio)
#| label: desc-mig
#| echo: false
# Variables a graficar
vars <- c("frecuencia_migrantes", "contacto_migrantes", "simpatia_migrantes", "perdida_identidad", "desempleo_migrantes")
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"frecuencia_migrantes" = "Frecuencia de Contacto con migrantes",
"contacto_migrantes" = "Contacto Positivo con Migrantes",
"simpatia_migrantes" = "Simpatía hacia migrantes",
"perdida_identidad" = "Pérdida de identidad",
"desempleo_migrantes" = "Desempleo percibido por migrantes"
)
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio <- elsoc_long %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(size = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"frecuencia_migrantes" = "#1b9e77",
"contacto_migrantes" = "#d95f02",
"simpatia_migrantes" = "#7570b3",
"perdida_identidad" = "#e7298a",
"desempleo_migrantes" = "#66a61e"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
#| label: desc-mig
#| echo: false
# Variables a graficar
vars <- c("frecuencia_migrantes", "contacto_migrantes", "simpatia_migrantes", "perdida_identidad", "desempleo_migrantes")
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"frecuencia_migrantes" = "Frecuencia de Contacto con migrantes",
"contacto_migrantes" = "Contacto Positivo con Migrantes",
"simpatia_migrantes" = "Simpatía hacia migrantes",
"perdida_identidad" = "Pérdida de identidad",
"desempleo_migrantes" = "Desempleo percibido por migrantes"
)
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio <- elsoc_long %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"frecuencia_migrantes" = "#1b9e77",
"contacto_migrantes" = "#d95f02",
"simpatia_migrantes" = "#7570b3",
"perdida_identidad" = "#e7298a",
"desempleo_migrantes" = "#66a61e"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
#| label: data-full-2
#| echo: false
# Agregar la variable ola a cada base
elsoc_4 <- elsoc_4 %>% mutate(ola = 4)
elsoc_5 <- elsoc_5 %>% mutate(ola = 5)
elsoc_6 <- elsoc_6 %>% mutate(ola = 6)
# Unir todas las olas en una sola base
elsoc_long_2 <- bind_rows(elsoc_4, elsoc_5, elsoc_6)
#| label: desc-mig4
#| echo: false
# Variables a graficar
vars <- c("confianza_migrantes", "fomentar_migracion", "igualdad_migrantes")
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"confianza_migrantes" = "Confianza en migrantes",
"fomentar_migracion" = "Fomentar Migracion Calificada",
"igualdad_migrantes" = "Acceso a Salud Migrantes")
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio <- elsoc_long %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"confianza_migrantes" = "#1b9e77",
"fomentar_migrantes" = "#d95f02",
"igualdad_migrantes" = "#7570b3"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio <- elsoc_long_2 %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio_2 <- elsoc_long_2 %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio <- elsoc_long %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio_2 <- elsoc_long_2 %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio_2, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"confianza_migrantes" = "#1b9e77",
"fomentar_migrantes" = "#d95f02",
"igualdad_migrantes" = "#7570b3"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"confianza_migrantes" = "Confianza en migrantes",
"fomentar_migrantes" = "Fomentar Migracion Calificada",
"igualdad_migrantes" = "Acceso a Salud Migrantes")
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio_2 <- elsoc_long_2 %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio_2, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"confianza_migrantes" = "#1b9e77",
"fomentar_migrantes" = "#d95f02",
"igualdad_migrantes" = "#7570b3"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
#| label: desc-mig4
#| echo: false
# Variables a graficar
vars <- c("confianza_migrantes", "fomentar_migracion", "igualdad_migrantes")
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"confianza_migrantes" = "Confianza en migrantes",
"fomentar_migracionj" = "Fomentar Migracion Calificada",
"igualdad_migrantes" = "Acceso a Salud Migrantes")
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio_2 <- elsoc_long_2 %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio_2, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"confianza_migrantes" = "#1b9e77",
"fomentar_migracion" = "#d95f02",
"igualdad_migrantes" = "#7570b3"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
#| label: desc-mig4
#| echo: false
# Variables a graficar
vars <- c("confianza_migrantes", "fomentar_migracion", "igualdad_migrantes")
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"confianza_migrantes" = "Confianza en migrantes",
"fomentar_migracion" = "Fomentar Migracion Calificada",
"igualdad_migrantes" = "Acceso a Salud Migrantes")
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio_2 <- elsoc_long_2 %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio_2, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"confianza_migrantes" = "#1b9e77",
"fomentar_migracion" = "#d95f02",
"igualdad_migrantes" = "#7570b3"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
#| label: desc-mig4
#| echo: false
# Variables a graficar
vars <- c("confianza_migrantes", "fomentar_migracion", "igualdad_migrantes")
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"confianza_migrantes" = "Confianza en migrantes",
"fomentar_migracion" = "Fomentar Migracion Calificada",
"igualdad_migrantes" = "Acceso a Salud Migrantes")
# Convertir a formato largo y recodificar respuestas
long_data <- elsoc_long_2 %>%
select(ola, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "valor") %>%
filter(!is.na(valor)) %>%
mutate(respuesta = case_when(
valor %in% c(1, 2) ~ "Bajo (1-2)",
valor == 3 ~ "Medio (3)",
valor %in% c(4, 5) ~ "Alto (4-5)"
),
respuesta = factor(respuesta, levels = c("Bajo (1-2)", "Medio (3)", "Alto (4-5)")))
# Calcular proporciones
freq_data <- long_data %>%
group_by(ola, variable, respuesta) %>%
summarise(freq = n(), .groups = "drop") %>%
group_by(ola, variable) %>%
mutate(prop = freq / sum(freq))
# Gráfico de barras apiladas
ggplot(freq_data, aes(x = factor(ola), y = prop, fill = respuesta)) +
geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) +
facet_wrap(~variable, ncol = 2, labeller = labeller(variable = nombres_legibles)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = c("Bajo (1-2)" = "#d73027",   # Rojo abajo
"Medio (3)" = "#fee08b",   # Amarillo al medio
"Alto (4-5)" = "#1a9850"), # Verde arriba
name = "Respuesta",
breaks = c("Bajo (1-2)", "Medio (3)", "Alto (4-5)")) +
labs(title = "Distribución simplificada de respuestas (ELSOC 2016-2019)",
x = "Ola", y = "Porcentaje") +
theme_minimal() +
theme(strip.text = element_text(size = 12),
legend.position = "bottom")
#| label: fig-long-1
#| fig-cap: Tendencia de variables sobre migración ELSOC (2016-2019)
#| echo: false
# Variables a graficar
vars <- c("frecuencia_migrantes", "contacto_migrantes", "simpatia_migrantes", "perdida_identidad", "desempleo_migrantes")
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"frecuencia_migrantes" = "Frecuencia de Contacto con migrantes",
"contacto_migrantes" = "Contacto Positivo con Migrantes",
"simpatia_migrantes" = "Simpatía hacia migrantes",
"perdida_identidad" = "Pérdida de identidad",
"desempleo_migrantes" = "Desempleo percibido por migrantes"
)
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio <- elsoc_long %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"frecuencia_migrantes" = "#1b9e77",
"contacto_migrantes" = "#d95f02",
"simpatia_migrantes" = "#7570b3",
"perdida_identidad" = "#e7298a",
"desempleo_migrantes" = "#66a61e"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
#| label: desc-mig2
#| fig-cap: Distribución simplificada de respuestas ELSOC (2016-2019)
#| echo: false
# Variables a graficar (solo 3)
vars <- c("frecuencia_migrantes", "contacto_migrantes", "simpatia_migrantes")
# Nombres más legibles
nombres_legibles <- c(
"frecuencia_migrantes" = "Frec. contacto migrantes",
"contacto_migrantes" = "Contacto positivo migrantes",
"simpatia_migrantes" = "Simpatía hacia migrantes"
)
# Convertir a formato largo y recodificar respuestas
long_data <- elsoc_long %>%
select(ola, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "valor") %>%
filter(!is.na(valor)) %>%
mutate(respuesta = case_when(
valor %in% c(1, 2) ~ "Bajo (1-2)",
valor == 3 ~ "Medio (3)",
valor %in% c(4, 5) ~ "Alto (4-5)"
),
respuesta = factor(respuesta, levels = c("Bajo (1-2)", "Medio (3)", "Alto (4-5)")))
# Calcular proporciones
freq_data <- long_data %>%
group_by(ola, variable, respuesta) %>%
summarise(freq = n(), .groups = "drop") %>%
group_by(ola, variable) %>%
mutate(prop = freq / sum(freq))
# Gráfico de barras apiladas con orden correcto
ggplot(freq_data, aes(x = factor(ola), y = prop, fill = respuesta)) +
geom_bar(stat = "identity", position = position_stack(reverse = TRUE)) +
facet_wrap(~variable, ncol = 3, labeller = labeller(variable = nombres_legibles)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_manual(values = c("Bajo (1-2)" = "#d73027",   # Rojo abajo
"Medio (3)" = "#fee08b",   # Amarillo al medio
"Alto (4-5)" = "#1a9850"), # Verde arriba
name = "Respuesta",
breaks = c("Bajo (1-2)", "Medio (3)", "Alto (4-5)")) +
labs(title = "Distribución simplificada de respuestas (ELSOC 2016-2019)",
x = "Ola", y = "Porcentaje") +
theme_minimal() +
theme(strip.text = element_text(size = 12),
legend.position = "bottom")
#| label: desc-mig4
#| fig-cap: Tendencia Variables Igualdad Migrantes
#| echo: false
# Variables a graficar
vars <- c("confianza_migrantes", "fomentar_migracion", "igualdad_migrantes")
# Nombres más legibles para la leyenda y facets
nombres_legibles <- c(
"confianza_migrantes" = "Confianza en migrantes",
"fomentar_migracion" = "Fomentar Migracion Calificada",
"igualdad_migrantes" = "Acceso a Salud Migrantes")
# Pasar a formato largo y calcular promedio por ola y variable
long_promedio_2 <- elsoc_long_2 %>%
select(ola, all_of(vars)) %>%
pivot_longer(
cols = all_of(vars),
names_to = "variable",
values_to = "valor"
) %>%
group_by(ola, variable) %>%
summarise(promedio = mean(valor, na.rm = TRUE), .groups = "drop")
# Graficar con nombres legibles en la leyenda
ggplot(long_promedio_2, aes(x = ola, y = promedio, color = variable, group = variable)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
scale_color_manual(values = c(
"confianza_migrantes" = "#1b9e77",
"fomentar_migracion" = "#d95f02",
"igualdad_migrantes" = "#7570b3"
),
labels = nombres_legibles) +
labs(title = "Tendencia de variables sobre migrantes (ELSOC 2016-2019)",
x = "Ola", y = "Promedio", color = "Variable") +
scale_y_continuous(limits = c(1, 5), breaks = 1:5) +
theme_minimal()
# 1. Packages ---------------------------------------------------------
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse,
sjlabelled,
sjmisc,
sjPlot,
here,
naniar)
options(scipen=999)
rm(list = ls())
load("~/GitHub/protest_effects/output/data/ELSOC_Long_2016_2023 (3).RData")
load("~/GitHub/protest_effects/input/data/raw/ELSOC_Long_2016_2023 (3).RData")
elsoc_long <- elsoc_long_2016_2023
rm(elsoc_long_2016_2023)
glimpse(elsoc_long)
elsoc <- elsoc_long %>%
select(idencuesta, tipo_caso,
ola,
comuna,
comuna_cod,
region, region_cod,
sexo = m0_sexo,
edad = m0_edad,
educacion = m01,
ocupacion = m03,
conf_gob = c05_01,
conf_part = c05_02,
conf_cong = c05_07,
conf_pres = c05_08,
efic_voto = c10_01,
efic_result = c10_02,
efic_expr = c10_03,
frq_marcha = c08_02,
ideologia = c15)
elsoc_long <- elsoc_long %>% select(-n_miss_all)
elsoc <- elsoc %>% select(-n_miss_all)
get_labels(elsoc$conf_cong, values = TRUE)
get_labels(elsoc$educacion, values = TRUE)
elsoc$educacion <- recode(elsoc$educacion, "c(-666, -777, -888, -999) = NA")
elsoc$ocupacion <- recode(elsoc$ocupacion, "c(-666, -777, -888, -999) = NA")
elsoc$conf_gob <- recode(elsoc$conf_gob, "c(-666, -777, -888, -999) = NA")
elsoc$conf_cong <- recode(elsoc$conf_cong, "c(-666, -777, -888, -999) = NA")
elsoc$conf_pres <- recode(elsoc$conf_pres, "c(-666, -777, -888, -999) = NA")
elsoc$efic_voto <- recode(elsoc$efic_voto, "c(-666, -777, -888, -999) = NA")
elsoc$efic_result <- recode(elsoc$efic_result, "c(-666, -777, -888, -999) = NA")
elsoc$efic_expr <- recode(elsoc$efic_expr, "c(-666, -777, -888, -999) = NA")
elsoc$frq_marcha <- recode(elsoc$frq_marcha, "c(-666, -777, -888, -999) = NA")
elsoc$ideologia <- recode(elsoc$ideologia, "c(-666, -777, -888, -999) = NA")
sapply(elsoc_long, class)
sapply(elsoc, class)
save(elsoc_long, file = here("protest_effects/output/data/elsoc_proc2.RData"))
save(elsoc_long, file = here("protest_effects/input/data/proc/elsoc_proc2.RData"))
save(elsoc, file = here("protest_effects/input/data/proc/elsoc_proc2.RData"))
sapply(elsoc, class)
save(elsoc, file = here("protest_effects/input/data/proc/elsoc_proc2.RData"))
save(elsoc, file = here("Github/protest_effects/input/data/proc/elsoc_proc2.RData"))

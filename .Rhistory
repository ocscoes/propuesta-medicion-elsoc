#             width = 0.1) +
scale_y_continuous(n.breaks = 7) +
scale_color_brewer(
name = "Pérdida identidad por \nmigrantes",
type = "qual",
palette = "Dark2"
)
make_plot2 <- function(design, predictor, outcome, ylab, legend_title, group) {
pred_sym <- ensym(predictor)
out_sym  <- ensym(outcome)
group_sym <- ensym(group)
design %>%
select(wave, !!pred_sym, !!out_sym, !!group_sym) %>%
tidyr::drop_na() %>%
group_by(wave, !!pred_sym, !!group_sym) %>%
summarise(
value = survey_mean(!!out_sym, vartype = "ci", na.rm = TRUE),
.groups = "drop"
) %>%
ggplot(aes(x = wave, y = value, group = !!pred_sym)) +
geom_point(aes(color = !!pred_sym), size = 3.5) +
geom_line(aes(color = !!pred_sym), linewidth = 0.8) +
facet_wrap(~!!group_sym, nrow = 2)
# geom_errorbar(aes(ymin = value_low, ymax = value_upp, color = !!pred_sym), width = 0.1) +
scale_y_continuous(n.breaks = 7) +
scale_color_manual(
name = legend_title,
values = c("#2b2f3c","#7ABA21", "#F9913D")
) +
labs(
x = "Ola",
y = ylab,
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2016-2023 (factores de expansión aplicados)"
) +
theme_ggdist() +
theme(
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position       = "top",
legend.direction      = "horizontal",
legend.box            = "horizontal",  # útil si hubiera varias leyendas
legend.title          = element_text(face = "bold"),
legend.key            = element_rect(fill = "white", color = NA),
legend.key.height     = unit(12, "pt"),
legend.key.width      = unit(18, "pt"),
axis.text  = element_text(size = 11)
) +
guides(color = guide_legend(
title.position = "top",   # título arriba
label.position = "bottom", # etiquetas a la derecha del símbolo
nrow = 1, byrow = TRUE,   # una fila (ajusta según ancho)
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
}
make_plot2
comb %>%
mutate(
plot = pmap(
list(pred, out),
~ make_plot2(
design       = db_pond,
predictor    = ..1,
outcome      = ..2,
ylab         = outcomes[..2],
legend_title = predictors[[..1]],
group        = educ
)
),
plot_id = paste0("plot_", out, "__by__", pred)
)
comb
outcomes
outcomes[..2]
group <- c("educ")
group
group_ed <- c("educ")
comb %>%
mutate(
plot = pmap(
list(pred, out),
~ make_plot2(
design       = db_pond,
predictor    = ..1,
outcome      = ..2,
ylab         = outcomes[..2],
legend_title = predictors[[..1]],
group        = group_ed
)
),
plot_id = paste0("plot_", out, "__by__", pred)
)
group_ed
comb %>%
mutate(
plot = pmap(
list(pred, out, group_ed),
~ make_plot2(
design       = db_pond,
predictor    = ..1,
outcome      = ..2,
ylab         = outcomes[..2],
legend_title = predictors[[..1]],
group        = ..1
)
),
plot_id = paste0("plot_", out, "__by__", pred)
)
make_plot2 <- function(design, predictor, outcome, ylab, legend_title, group) {
pred_sym <- ensym(predictor)
out_sym  <- ensym(outcome)
group_sym <- ensym(group)
design %>%
select(wave, !!pred_sym, !!out_sym, !!group_sym) %>%
tidyr::drop_na() %>%
group_by(wave, !!pred_sym, !!group_sym) %>%
summarise(
value = survey_mean(!!out_sym, vartype = "ci", na.rm = TRUE),
.groups = "drop"
) %>%
ggplot(aes(x = wave, y = value, group = !!pred_sym)) +
geom_point(aes(color = !!pred_sym), size = 3.5) +
geom_line(aes(color = !!pred_sym), linewidth = 0.8) +
facet_wrap(~!!group_sym, nrow = 2)
# geom_errorbar(aes(ymin = value_low, ymax = value_upp, color = !!pred_sym), width = 0.1) +
scale_y_continuous(n.breaks = 7) +
scale_color_manual(
name = legend_title,
values = c("#2b2f3c","#7ABA21", "#F9913D")
) +
labs(
x = "Ola",
y = ylab,
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2016-2023 (factores de expansión aplicados)"
) +
theme_ggdist() +
theme(
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position       = "top",
legend.direction      = "horizontal",
legend.box            = "horizontal",  # útil si hubiera varias leyendas
legend.title          = element_text(face = "bold"),
legend.key            = element_rect(fill = "white", color = NA),
legend.key.height     = unit(12, "pt"),
legend.key.width      = unit(18, "pt"),
axis.text  = element_text(size = 11)
) +
guides(color = guide_legend(
title.position = "top",   # título arriba
label.position = "bottom", # etiquetas a la derecha del símbolo
nrow = 1, byrow = TRUE,   # una fila (ajusta según ancho)
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
}
group_ed <- c("educ")
plots_tbl2 <- comb %>%
mutate(
plot = pmap(
list(pred, out, group_ed),
~ make_plot2(
design       = db_pond,
predictor    = ..1,
outcome      = ..2,
ylab         = outcomes[..2],
legend_title = predictors[[..1]],
group        =
)
),
plot_id = paste0("plot_", out, "__by__", pred)
)
plots_tbl2 <- comb %>%
mutate(
plot = pmap(
list(pred, out, group_ed),
~ make_plot2(
design       = db_pond,
predictor    = ..1,
outcome      = ..2,
ylab         = outcomes[..2],
legend_title = predictors[[..1]],
group        = group_ed
)
),
plot_id = paste0("plot_", out, "__by__", pred)
)
make_plot2 <- function(design, predictor, outcome, ylab, legend_title, group) {
pred_sym <- ensym(predictor)
out_sym  <- ensym(outcome)
group_sym <- ensym(group)
design %>%
select(wave, !!pred_sym, !!out_sym, !!group_sym) %>%
tidyr::drop_na() %>%
group_by(wave, !!pred_sym, !!group_sym) %>%
summarise(
value = survey_mean(!!out_sym, vartype = "ci", na.rm = TRUE),
.groups = "drop"
) %>%
ggplot(aes(x = wave, y = value, group = !!pred_sym)) +
geom_point(aes(color = !!pred_sym), size = 3.5) +
geom_line(aes(color = !!pred_sym), linewidth = 0.8) +
facet_wrap(~!!group_sym, nrow = 2)
# geom_errorbar(aes(ymin = value_low, ymax = value_upp, color = !!pred_sym), width = 0.1) +
scale_y_continuous(n.breaks = 7) +
scale_color_manual(
name = legend_title,
values = c("#2b2f3c","#7ABA21", "#F9913D")
) +
labs(
x = "Ola",
y = ylab,
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2016-2023 (factores de expansión aplicados)"
) +
theme_ggdist() +
theme(
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position       = "top",
legend.direction      = "horizontal",
legend.box            = "horizontal",  # útil si hubiera varias leyendas
legend.title          = element_text(face = "bold"),
legend.key            = element_rect(fill = "white", color = NA),
legend.key.height     = unit(12, "pt"),
legend.key.width      = unit(18, "pt"),
axis.text  = element_text(size = 11)
) +
guides(color = guide_legend(
title.position = "top",   # título arriba
label.position = "bottom", # etiquetas a la derecha del símbolo
nrow = 1, byrow = TRUE,   # una fila (ajusta según ancho)
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
}
group_ed <- c("educ")
plots_tbl2 <- comb %>%
mutate(
plot = pmap(
list(pred, out, group_ed),
~ make_plot2(
design       = db_pond,
predictor    = ..1,
outcome      = ..2,
ylab         = outcomes[..2],
legend_title = predictors[[..1]],
group        = group_ed
)
),
plot_id = paste0("plot_", out, "__by__", pred)
)
make_plot2 <- function(design, predictor, outcome, ylab, legend_title, group) {
pred_sym  <- sym(predictor)  # predictor como string -> símbolo
out_sym   <- sym(outcome)
group_sym <- sym(group)
design %>%
select(wave, !!pred_sym, !!out_sym, !!group_sym) %>%
drop_na() %>%
group_by(wave, !!pred_sym, !!group_sym) %>%
summarise(
value = survey_mean(!!out_sym, vartype = "ci", na.rm = TRUE),
.groups = "drop"
) %>%
ggplot(aes(x = wave, y = value, group = !!pred_sym)) +
geom_point(aes(color = !!pred_sym), size = 3.5) +
geom_line(aes(color = !!pred_sym), linewidth = 0.8) +
facet_wrap(vars(!!group_sym), nrow = 2) +                    # <- clave
# geom_errorbar(aes(ymin = value_low, ymax = value_upp, color = !!pred_sym), width = 0.1) +
scale_y_continuous(n.breaks = 7) +
scale_color_manual(
name   = legend_title,
values = c("#2b2f3c","#7ABA21", "#F9913D")
) +
labs(
x = "Ola",
y = ylab,
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2016-2023 (factores de expansión aplicados)"
) +
theme_ggdist() +
theme(
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position       = "top",
legend.direction      = "horizontal",
legend.box            = "horizontal",
legend.title          = element_text(face = "bold"),
legend.key            = element_rect(fill = "white", color = NA),
legend.key.height     = unit(12, "pt"),
legend.key.width      = unit(18, "pt"),
axis.text             = element_text(size = 11)
) +
guides(color = guide_legend(
title.position = "top",
label.position = "bottom",
nrow = 1, byrow = TRUE,
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
}
plots_tbl2 <- comb %>%
mutate(
plot = pmap(
list(pred, out),
~ make_plot2(
design       = db_pond,
predictor    = ..1,
outcome      = ..2,
ylab         = outcomes[..2],
legend_title = predictors[[..1]],
group        = "educ"        # <-- como STRING
)
),
plot_id = paste0("plot_", out, "__by__", pred, "__faceted_by_educ")
)
plots_tbl2
plots_tbl2
sel <- plots_tbl2 %>%
filter(out  %in% c("seguridad_sub","seguridad_obj"))
walk(sel$plot, print)
db_pond %>%
select(wave, igualdad_migrantes, comportamiento_prosocial, educ) %>%
na.omit() %>%
group_by(wave, igualdad_migrantes, educ) %>%
summarise(value = survey_mean(comportamiento_prosocial, vartype = "ci"))
db_pond %>%
select(wave, igualdad_migrantes, comportamiento_prosocial, educ) %>%
na.omit() %>%
group_by(wave, igualdad_migrantes, educ) %>%
summarise(value = survey_mean(comportamiento_prosocial, vartype = "ci")) %>%
ggplot(aes(x = wave, y = value, fill = igualdad_migrantes)) +
geom_col(position = position_dodge2(padding = 0.01), width = 0.6)
db_pond %>%
select(wave, igualdad_migrantes, comportamiento_prosocial, educ) %>%
na.omit() %>%
group_by(wave, igualdad_migrantes, educ) %>%
summarise(value = survey_mean(comportamiento_prosocial, vartype = "ci")) %>%
ggplot(aes(x = wave, y = value, fill = igualdad_migrantes)) +
geom_col(position = position_dodge2(padding = 0.01), width = 0.6) +
facet_wrap(~educ, nrow = 2)
# acceso salud igualitario + prosociañ
db_pond %>%
select(wave, igualdad_migrantes, comportamiento_prosocial, educ) %>%
na.omit() %>%
group_by(wave, igualdad_migrantes, educ) %>%
summarise(value = survey_mean(comportamiento_prosocial, vartype = "ci")) %>%
ggplot(aes(x = wave, y = value, fill = igualdad_migrantes)) +
geom_col(position = position_dodge2(padding = 0.01), width = 0.6) +
facet_wrap(~educ, nrow = 2)+
scale_y_continuous(limits = c(0,3),n.breaks = 10) +
scale_fill_manual(
name = "Acceso a salud \nigualitario para migrantes",
values = c("#2b2f3c","#7ABA21", "#F9913D")
) +
labs(
x = "Ola",
y = "Comportamiento prosocial",
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2016-2023 (factores de expansión aplicados)"
) +
theme_ggdist() +
theme(
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position       = "top",
legend.direction      = "horizontal",
legend.box            = "horizontal",  # útil si hubiera varias leyendas
legend.title          = element_text(face = "bold"),
legend.key            = element_rect(fill = "white", color = NA),
legend.key.height     = unit(12, "pt"),
legend.key.width      = unit(18, "pt"),
axis.text  = element_text(size = 11)
) +
guides(color = guide_legend(
title.position = "top",   # título arriba
label.position = "bottom", # etiquetas a la derecha del símbolo
nrow = 1, byrow = TRUE,   # una fila (ajusta según ancho)
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
# acceso salud igualitario + ayuda economica
db_pond %>%
select(wave, igualdad_migrantes, ayuda_economica, educ) %>%
na.omit() %>%
group_by(wave, igualdad_migrantes, educ) %>%
summarise(value = survey_mean(ayuda_economica, vartype = "ci")) %>%
ggplot(aes(x = wave, y = value, fill = igualdad_migrantes)) +
geom_col(position = position_dodge2(padding = 0.01), width = 0.6) +
facet_wrap(~educ, nrow = 2)+
scale_y_continuous(limits = c(0,3),n.breaks = 10) +
scale_fill_manual(
name = "Acceso a salud \nigualitario para migrantes",
values = c("#2b2f3c","#7ABA21", "#F9913D")
) +
labs(
x = "Ola",
y = "Ayuda económica",
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2016-2023 (factores de expansión aplicados)"
) +
theme_ggdist() +
theme(
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position       = "top",
legend.direction      = "horizontal",
legend.box            = "horizontal",  # útil si hubiera varias leyendas
legend.title          = element_text(face = "bold"),
legend.key            = element_rect(fill = "white", color = NA),
legend.key.height     = unit(12, "pt"),
legend.key.width      = unit(18, "pt"),
axis.text  = element_text(size = 11)
) +
guides(color = guide_legend(
title.position = "top",   # título arriba
label.position = "bottom", # etiquetas a la derecha del símbolo
nrow = 1, byrow = TRUE,   # una fila (ajusta según ancho)
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
db_pond %>%
select(wave, igualdad_migrantes, sentido_pertenencia, educ) %>%
na.omit() %>%
group_by(wave, igualdad_migrantes, educ) %>%
summarise(value = survey_mean(sentido_pertenencia, vartype = "ci")) %>%
ggplot(aes(x = wave, y = value, fill = igualdad_migrantes)) +
geom_col(position = position_dodge2(padding = 0.01), width = 0.6) +
facet_wrap(~educ, nrow = 2)+
scale_y_continuous(limits = c(0,5),n.breaks = 10) +
scale_fill_manual(
name = "Acceso a salud \nigualitario para migrantes",
values = c("#2b2f3c","#7ABA21", "#F9913D")
) +
labs(
x = "Ola",
y = "Sentido pertenencia barrio",
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2016-2023 (factores de expansión aplicados)"
) +
theme_ggdist() +
theme(
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position       = "top",
legend.direction      = "horizontal",
legend.box            = "horizontal",  # útil si hubiera varias leyendas
legend.title          = element_text(face = "bold"),
legend.key            = element_rect(fill = "white", color = NA),
legend.key.height     = unit(12, "pt"),
legend.key.width      = unit(18, "pt"),
axis.text  = element_text(size = 11)
) +
guides(color = guide_legend(
title.position = "top",   # título arriba
label.position = "bottom", # etiquetas a la derecha del símbolo
nrow = 1, byrow = TRUE,   # una fila (ajusta según ancho)
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
db_pond %>%
select(wave, igualdad_migrantes, satisfaccion_barrio, educ) %>%
na.omit() %>%
group_by(wave, igualdad_migrantes, educ) %>%
summarise(value = survey_mean(satisfaccion_barrio, vartype = "ci")) %>%
ggplot(aes(x = wave, y = value, fill = igualdad_migrantes)) +
geom_col(position = position_dodge2(padding = 0.01), width = 0.6) +
facet_wrap(~educ, nrow = 2)+
scale_y_continuous(limits = c(0,5),n.breaks = 10) +
scale_fill_manual(
name = "Acceso a salud \nigualitario para migrantes",
values = c("#2b2f3c","#7ABA21", "#F9913D")
) +
labs(
x = "Ola",
y = "Satisfacción barrio",
caption = "Fuente: elaboración propia con datos agrupados de ELSOC 2016-2023 (factores de expansión aplicados)"
) +
theme_ggdist() +
theme(
legend.box.background = element_rect(color = "grey20", fill = "white", linewidth = 0.5),
legend.background     = element_rect(fill = "white", color = NA),
legend.margin         = margin(t = 6, r = 8, b = 6, l = 8),
legend.box.margin     = margin(t = 6, r = 6, b = 6, l = 6),
legend.position       = "top",
legend.direction      = "horizontal",
legend.box            = "horizontal",  # útil si hubiera varias leyendas
legend.title          = element_text(face = "bold"),
legend.key            = element_rect(fill = "white", color = NA),
legend.key.height     = unit(12, "pt"),
legend.key.width      = unit(18, "pt"),
axis.text  = element_text(size = 11)
) +
guides(color = guide_legend(
title.position = "top",   # título arriba
label.position = "bottom", # etiquetas a la derecha del símbolo
nrow = 1, byrow = TRUE,   # una fila (ajusta según ancho)
keywidth = unit(14, "pt"),
keyheight = unit(10, "pt")
))
sel <- plots_tbl2 %>%
filter(out  %in% c("sentido_pertenencia", "satisfaccion_barrio"))
walk(sel[-c(5, 6), ]$plot, print)
